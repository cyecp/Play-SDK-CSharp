// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LeanCloud.Play.Protocol {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIlZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90",
            "by5tZXNzYWdlcxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvIhcK",
            "CEludFZhbHVlEgsKA3ZhbBgBIAEoBSKYAQoSUm9vbVN5c3RlbVByb3BlcnR5",
            "EigKBG9wZW4YASABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEisK",
            "B3Zpc2libGUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEhYK",
            "DmV4cGVjdF9tZW1iZXJzGAMgASgJEhMKC21heF9tZW1iZXJzGAQgASgFIksK",
            "ClJvb21NZW1iZXISCwoDcGlkGAEgASgJEhAKCGFjdG9yX2lkGAIgASgFEgwK",
            "BGF0dHIYAyABKAwSEAoIaW5hY3RpdmUYBCABKAgiLAoHQXBwSW5mbxIQCghh",
            "cHBfY29kZRgBIAEoBRIPCgdhcHBfbXNnGAIgASgJInIKCUVycm9ySW5mbxIT",
            "CgtyZWFzb25fY29kZRgBIAEoBRIOCgZkZXRhaWwYAiABKAkSQAoIYXBwX2lu",
            "Zm8YAyABKAsyLi5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3Nh",
            "Z2VzLkFwcEluZm8ihwMKC1Jvb21PcHRpb25zEgsKA2NpZBgBIAEoCRIrCgd2",
            "aXNpYmxlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIoCgRv",
            "cGVuGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIWCg5lbXB0",
            "eV9yb29tX3R0bBgEIAEoBRISCgpwbGF5ZXJfdHRsGAUgASgFEhMKC21heF9t",
            "ZW1iZXJzGAYgASgFEgwKBGZsYWcYByABKAMSEwoLcGx1Z2luX25hbWUYCCAB",
            "KAkSDAoEYXR0chgJIAEoDBIWCg5leHBlY3RfbWVtYmVycxgKIAMoCRIXCg9s",
            "b2JieV9hdHRyX2tleXMYCyADKAkSQgoHbWVtYmVycxgMIAMoCzIxLmdhbWVf",
            "cHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuUm9vbU1lbWJlchIU",
            "CgxtZW1iZXJfY291bnQYDSABKAUSFwoPbWFzdGVyX2FjdG9yX2lkGA4gASgF",
            "IrIBChJTZXNzaW9uT3BlblJlcXVlc3QSDgoGYXBwX2lkGAEgASgJEg8KB3Bl",
            "ZXJfaWQYAiABKAkSFAoMZ2FtZV92ZXJzaW9uGAMgASgJEhMKC3Nka192ZXJz",
            "aW9uGAQgASgJEhgKEHByb3RvY29sX3ZlcnNpb24YBSABKAkSCQoBdBgGIAEo",
            "AxIJCgFuGAcgASgJEgkKAXMYCCABKAkSFQoNY29uZmlnX2JpdG1hcBgJIAEo",
            "AyJdChFDcmVhdGVSb29tUmVxdWVzdBJICgxyb29tX29wdGlvbnMYASABKAsy",
            "Mi5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3NhZ2VzLlJvb21P",
            "cHRpb25zImwKEkNyZWF0ZVJvb21SZXNwb25zZRJICgxyb29tX29wdGlvbnMY",
            "ASABKAsyMi5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3NhZ2Vz",
            "LlJvb21PcHRpb25zEgwKBGFkZHIYAiABKAkiuAEKD0pvaW5Sb29tUmVxdWVz",
            "dBIOCgZyZWpvaW4YASABKAgSSAoMcm9vbV9vcHRpb25zGAIgASgLMjIuZ2Ft",
            "ZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5Sb29tT3B0aW9u",
            "cxITCgtleHBlY3RfYXR0chgDIAEoDBIZChFwaWdneWJhY2tfcGVlcl9pZBgE",
            "IAEoCRIbChNjcmVhdGVfb25fbm90X2ZvdW5kGAUgASgIImoKEEpvaW5Sb29t",
            "UmVzcG9uc2USSAoMcm9vbV9vcHRpb25zGAEgASgLMjIuZ2FtZV9wcm90b2J1",
            "Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5Sb29tT3B0aW9ucxIMCgRhZGRy",
            "GAIgASgJIlkKFEpvaW5Sb29tTm90aWZpY2F0aW9uEkEKBm1lbWJlchgBIAEo",
            "CzIxLmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuUm9v",
            "bU1lbWJlciIoChRMZWZ0Um9vbU5vdGlmaWNhdGlvbhIQCghhY3Rvcl9pZBgB",
            "IAEoBSJuChFLaWNrTWVtYmVyUmVxdWVzdBIXCg90YXJnZXRfYWN0b3JfaWQY",
            "ASABKAUSQAoIYXBwX2luZm8YAiABKAsyLi5nYW1lX3Byb3RvYnVmX21lc3Nh",
            "Z2VzLnByb3RvLm1lc3NhZ2VzLkFwcEluZm8iLQoSS2lja01lbWJlclJlc3Bv",
            "bnNlEhcKD3RhcmdldF9hY3Rvcl9pZBgBIAEoBSJTChVVcGRhdGVQcm9wZXJ0",
            "eVJlcXVlc3QSFwoPdGFyZ2V0X2FjdG9yX2lkGAEgASgFEhMKC2V4cGVjdF9h",
            "dHRyGAIgASgMEgwKBGF0dHIYAyABKAwiOAoWVXBkYXRlUHJvcGVydHlSZXNw",
            "b25zZRIMCgRhdHRyGAEgASgMEhAKCGFjdG9yX2lkGAIgASgFIjwKGlVwZGF0",
            "ZVByb3BlcnR5Tm90aWZpY2F0aW9uEgwKBGF0dHIYASABKAwSEAoIYWN0b3Jf",
            "aWQYAiABKAUiuwEKGFVwZGF0ZVN5c1Byb3BlcnR5UmVxdWVzdBJSCg9leHBl",
            "Y3Rfc3lzX2F0dHIYASABKAsyOS5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnBy",
            "b3RvLm1lc3NhZ2VzLlJvb21TeXN0ZW1Qcm9wZXJ0eRJLCghzeXNfYXR0chgC",
            "IAEoCzI5LmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMu",
            "Um9vbVN5c3RlbVByb3BlcnR5ImgKGVVwZGF0ZVN5c1Byb3BlcnR5UmVzcG9u",
            "c2USSwoIc3lzX2F0dHIYASABKAsyOS5nYW1lX3Byb3RvYnVmX21lc3NhZ2Vz",
            "LnByb3RvLm1lc3NhZ2VzLlJvb21TeXN0ZW1Qcm9wZXJ0eSJsCh1VcGRhdGVT",
            "eXNQcm9wZXJ0eU5vdGlmaWNhdGlvbhJLCghzeXNfYXR0chgBIAEoCzI5Lmdh",
            "bWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuUm9vbVN5c3Rl",
            "bVByb3BlcnR5IjQKGVVwZGF0ZU1hc3RlckNsaWVudFJlcXVlc3QSFwoPbWFz",
            "dGVyX2FjdG9yX2lkGAEgASgFIjUKGlVwZGF0ZU1hc3RlckNsaWVudFJlc3Bv",
            "bnNlEhcKD21hc3Rlcl9hY3Rvcl9pZBgBIAEoBSI5Ch5VcGRhdGVNYXN0ZXJD",
            "bGllbnROb3RpZmljYXRpb24SFwoPbWFzdGVyX2FjdG9yX2lkGAEgASgFItwE",
            "ChBSb29tTm90aWZpY2F0aW9uEhUKDWluaXRfYnlfYWN0b3IYASABKAUSQAoI",
            "YXBwX2luZm8YAyABKAsyLi5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3Rv",
            "Lm1lc3NhZ2VzLkFwcEluZm8SEQoJYnlfbWFzdGVyGAQgASgIElAKCWpvaW5f",
            "cm9vbRgUIAEoCzI7LmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVz",
            "c2FnZXMuSm9pblJvb21Ob3RpZmljYXRpb25IABJcCg91cGRhdGVfcHJvcGVy",
            "dHkYFSABKAsyQS5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3Nh",
            "Z2VzLlVwZGF0ZVByb3BlcnR5Tm90aWZpY2F0aW9uSAASYwoTdXBkYXRlX3N5",
            "c19wcm9wZXJ0eRgWIAEoCzJELmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJv",
            "dG8ubWVzc2FnZXMuVXBkYXRlU3lzUHJvcGVydHlOb3RpZmljYXRpb25IABJl",
            "ChR1cGRhdGVfbWFzdGVyX2NsaWVudBgXIAEoCzJFLmdhbWVfcHJvdG9idWZf",
            "bWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuVXBkYXRlTWFzdGVyQ2xpZW50Tm90",
            "aWZpY2F0aW9uSAASUAoJbGVmdF9yb29tGBggASgLMjsuZ2FtZV9wcm90b2J1",
            "Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5MZWZ0Um9vbU5vdGlmaWNhdGlv",
            "bkgAQg4KDG5vdGlmaWNhdGlvbiLQAQoNRGlyZWN0Q29tbWFuZBIOCgZjYWNo",
            "ZWQYASABKAgSEAoIZXZlbnRfaWQYAiABKAUSFgoOcmVjZWl2ZXJfZ3JvdXAY",
            "AyABKAUSFgoOY2FjaGluZ19vcHRpb24YBCABKAUSFQoNZXZlbnRfb3B0aW9u",
            "cxgFIAEoBRIUCgx0b19hY3Rvcl9pZHMYBiADKAUSCwoDbXNnGAcgASgMEhEK",
            "CXRpbWVzdGFtcBgIIAEoAxIVCg1mcm9tX2FjdG9yX2lkGAkgASgFEgkKAWkY",
            "CiABKAUiKgoKQWNrQ29tbWFuZBIRCgl0aW1lc3RhbXAYASABKAMSCQoBaRgL",
            "IAEoBSJVCg1FdmVudHNDb21tYW5kEkQKBmV2ZW50cxgBIAMoCzI0LmdhbWVf",
            "cHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuRGlyZWN0Q29tbWFu",
            "ZCIkChBKb2luTG9iYnlSZXF1ZXN0EhAKCGxvYmJ5X2lkGAEgASgJIlMKD1Jv",
            "b21MaXN0Q29tbWFuZBJACgRsaXN0GAEgAygLMjIuZ2FtZV9wcm90b2J1Zl9t",
            "ZXNzYWdlcy5wcm90by5tZXNzYWdlcy5Sb29tT3B0aW9ucyKHAQoMQXBwU3Rh",
            "dGlzdGljEhYKDmNvdW50X29mX3Jvb21zGAEgASgFEiIKGmNvdW50X29mX3Bs",
            "YXllcnNfb25fcm91dGVyGAIgASgFEiEKGWNvdW50X29mX3BsYXllcnNfaW5f",
            "cm9vbXMYAyABKAUSGAoQY291bnRfb2ZfcGxheWVycxgEIAEoBSJaChBTdGF0",
            "aXN0aWNDb21tYW5kEkYKCWFwcF9zdGF0cxgBIAEoCzIzLmdhbWVfcHJvdG9i",
            "dWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuQXBwU3RhdGlzdGljIlQKDEVy",
            "cm9yQ29tbWFuZBJECgplcnJvcl9pbmZvGAEgASgLMjAuZ2FtZV9wcm90b2J1",
            "Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5FcnJvckluZm8i0gUKDlJlcXVl",
            "c3RNZXNzYWdlEgkKAWkYASABKAUSUQoMc2Vzc2lvbl9vcGVuGBQgASgLMjku",
            "Z2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5TZXNzaW9u",
            "T3BlblJlcXVlc3RIABJPCgtjcmVhdGVfcm9vbRgVIAEoCzI4LmdhbWVfcHJv",
            "dG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuQ3JlYXRlUm9vbVJlcXVl",
            "c3RIABJLCglqb2luX3Jvb20YFiABKAsyNi5nYW1lX3Byb3RvYnVmX21lc3Nh",
            "Z2VzLnByb3RvLm1lc3NhZ2VzLkpvaW5Sb29tUmVxdWVzdEgAElcKD3VwZGF0",
            "ZV9wcm9wZXJ0eRgXIAEoCzI8LmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJv",
            "dG8ubWVzc2FnZXMuVXBkYXRlUHJvcGVydHlSZXF1ZXN0SAASXgoTdXBkYXRl",
            "X3N5c19wcm9wZXJ0eRgYIAEoCzI/LmdhbWVfcHJvdG9idWZfbWVzc2FnZXMu",
            "cHJvdG8ubWVzc2FnZXMuVXBkYXRlU3lzUHJvcGVydHlSZXF1ZXN0SAASYAoU",
            "dXBkYXRlX21hc3Rlcl9jbGllbnQYGSABKAsyQC5nYW1lX3Byb3RvYnVmX21l",
            "c3NhZ2VzLnByb3RvLm1lc3NhZ2VzLlVwZGF0ZU1hc3RlckNsaWVudFJlcXVl",
            "c3RIABJPCgtraWNrX21lbWJlchgaIAEoCzI4LmdhbWVfcHJvdG9idWZfbWVz",
            "c2FnZXMucHJvdG8ubWVzc2FnZXMuS2lja01lbWJlclJlcXVlc3RIABJNCgpq",
            "b2luX2xvYmJ5GDYgASgLMjcuZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90",
            "by5tZXNzYWdlcy5Kb2luTG9iYnlSZXF1ZXN0SABCCQoHcmVxdWVzdCLABQoP",
            "UmVzcG9uc2VNZXNzYWdlEgkKAWkYASABKAUSRAoKZXJyb3JfaW5mbxgCIAEo",
            "CzIwLmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuRXJy",
            "b3JJbmZvElAKC2NyZWF0ZV9yb29tGBQgASgLMjkuZ2FtZV9wcm90b2J1Zl9t",
            "ZXNzYWdlcy5wcm90by5tZXNzYWdlcy5DcmVhdGVSb29tUmVzcG9uc2VIABJM",
            "Cglqb2luX3Jvb20YFSABKAsyNy5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnBy",
            "b3RvLm1lc3NhZ2VzLkpvaW5Sb29tUmVzcG9uc2VIABJYCg91cGRhdGVfcHJv",
            "cGVydHkYFiABKAsyPS5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1l",
            "c3NhZ2VzLlVwZGF0ZVByb3BlcnR5UmVzcG9uc2VIABJfChN1cGRhdGVfc3lz",
            "X3Byb3BlcnR5GBcgASgLMkAuZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90",
            "by5tZXNzYWdlcy5VcGRhdGVTeXNQcm9wZXJ0eVJlc3BvbnNlSAASYQoUdXBk",
            "YXRlX21hc3Rlcl9jbGllbnQYGCABKAsyQS5nYW1lX3Byb3RvYnVmX21lc3Nh",
            "Z2VzLnByb3RvLm1lc3NhZ2VzLlVwZGF0ZU1hc3RlckNsaWVudFJlc3BvbnNl",
            "SAASUAoLa2lja19tZW1iZXIYGSABKAsyOS5nYW1lX3Byb3RvYnVmX21lc3Nh",
            "Z2VzLnByb3RvLm1lc3NhZ2VzLktpY2tNZW1iZXJSZXNwb25zZUgAEkAKA2Fj",
            "axgaIAEoCzIxLmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2Fn",
            "ZXMuQWNrQ29tbWFuZEgAQgoKCHJlc3BvbnNlIusECgRCb2R5EkgKB3JlcXVl",
            "c3QYASABKAsyNS5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3Nh",
            "Z2VzLlJlcXVlc3RNZXNzYWdlSAASSgoIcmVzcG9uc2UYAiABKAsyNi5nYW1l",
            "X3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3NhZ2VzLlJlc3BvbnNlTWVz",
            "c2FnZUgAEkYKBmRpcmVjdBgDIAEoCzI0LmdhbWVfcHJvdG9idWZfbWVzc2Fn",
            "ZXMucHJvdG8ubWVzc2FnZXMuRGlyZWN0Q29tbWFuZEgAElQKEXJvb21fbm90",
            "aWZpY2F0aW9uGAQgASgLMjcuZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90",
            "by5tZXNzYWdlcy5Sb29tTm90aWZpY2F0aW9uSAASRgoGZXZlbnRzGAUgASgL",
            "MjQuZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5FdmVu",
            "dHNDb21tYW5kSAASTAoJc3RhdGlzdGljGDIgASgLMjcuZ2FtZV9wcm90b2J1",
            "Zl9tZXNzYWdlcy5wcm90by5tZXNzYWdlcy5TdGF0aXN0aWNDb21tYW5kSAAS",
            "SwoJcm9vbV9saXN0GDMgASgLMjYuZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5w",
            "cm90by5tZXNzYWdlcy5Sb29tTGlzdENvbW1hbmRIABJECgVlcnJvchh/IAEo",
            "CzIzLmdhbWVfcHJvdG9idWZfbWVzc2FnZXMucHJvdG8ubWVzc2FnZXMuRXJy",
            "b3JDb21tYW5kSABCBgoEYm9keSKTAQoHQ29tbWFuZBI/CgNjbWQYASABKA4y",
            "Mi5nYW1lX3Byb3RvYnVmX21lc3NhZ2VzLnByb3RvLm1lc3NhZ2VzLkNvbW1h",
            "bmRUeXBlEjkKAm9wGAIgASgOMi0uZ2FtZV9wcm90b2J1Zl9tZXNzYWdlcy5w",
            "cm90by5tZXNzYWdlcy5PcFR5cGUSDAoEYm9keRgDIAEoDCp3CgtDb21tYW5k",
            "VHlwZRILCgd1bmtub3duEAASCwoHc2Vzc2lvbhABEggKBGNvbnYQAhIKCgZk",
            "aXJlY3QQAxIJCgVlcnJvchAEEgkKBWxvYmJ5EAUSDQoJc3RhdGlzdGljEAYS",
            "CgoGZXZlbnRzEAcSBwoDYWNrEAgqyQUKBk9wVHlwZRIICgRub25lEAASCAoE",
            "b3BlbhABEgoKBm9wZW5lZBACEgkKBWNsb3NlEAMSCgoGY2xvc2VkEAQSCQoF",
            "c3RhcnQQHhILCgdzdGFydGVkEB8SDgoKYWRkX3JhbmRvbRAgEhAKDHJhbmRv",
            "bV9hZGRlZBAhEhAKDG1hdGNoX3JhbmRvbRAiEhIKDnJhbmRvbV9tYXRjaGVk",
            "ECMSBwoDYWRkECQSCQoFYWRkZWQQJRISCg5tZW1iZXJzX2pvaW5lZBAmEhIK",
            "Dm1lbWJlcnNfb25saW5lECcSCgoGcmVtb3ZlECgSCwoHcmVtb3ZlZBApEhAK",
            "DG1lbWJlcnNfbGVmdBAqEhMKD21lbWJlcnNfb2ZmbGluZRArEhgKFHVwZGF0",
            "ZV9tYXN0ZXJfY2xpZW50ECwSGQoVbWFzdGVyX2NsaWVudF91cGRhdGVkEC0S",
            "GQoVbWFzdGVyX2NsaWVudF9jaGFuZ2VkEC4SCgoGdXBkYXRlEC8SCwoHdXBk",
            "YXRlZBAwEhIKDnVwZGF0ZWRfbm90aWZ5EDESGgoWdXBkYXRlX3N5c3RlbV9w",
            "cm9wZXJ0eRAyEhsKF3N5c3RlbV9wcm9wZXJ0eV91cGRhdGVkEDMSIgoec3lz",
            "dGVtX3Byb3BlcnR5X3VwZGF0ZWRfbm90aWZ5EDQSEQoNb3BlbmVkX25vdGlm",
            "eRA1EgsKB3Zpc2libGUQNhISCg52aXNpYmxlX25vdGlmeRA3EhYKEnVwZGF0",
            "ZV9wbGF5ZXJfcHJvcBA4EhcKE3BsYXllcl9wcm9wX3VwZGF0ZWQQORIQCgxw",
            "bGF5ZXJfcHJvcHMQOhIICgRraWNrEDsSCgoGa2lja2VkEDwSEQoNa2lja2Vk",
            "X25vdGljZRA9Eg0KCXJvb21fbGlzdBBkEhAKDGZpbmRfZnJpZW5kcxBlEhEK",
            "DWZvdW5kX2ZyaWVuZHMQZkIaqgIXTGVhbkNsb3VkLlBsYXkuUHJvdG9jb2xi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LeanCloud.Play.Protocol.CommandType), typeof(global::LeanCloud.Play.Protocol.OpType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.IntValue), global::LeanCloud.Play.Protocol.IntValue.Parser, new[]{ "Val" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RoomSystemProperty), global::LeanCloud.Play.Protocol.RoomSystemProperty.Parser, new[]{ "Open", "Visible", "ExpectMembers", "MaxMembers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RoomMember), global::LeanCloud.Play.Protocol.RoomMember.Parser, new[]{ "Pid", "ActorId", "Attr", "Inactive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.AppInfo), global::LeanCloud.Play.Protocol.AppInfo.Parser, new[]{ "AppCode", "AppMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.ErrorInfo), global::LeanCloud.Play.Protocol.ErrorInfo.Parser, new[]{ "ReasonCode", "Detail", "AppInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RoomOptions), global::LeanCloud.Play.Protocol.RoomOptions.Parser, new[]{ "Cid", "Visible", "Open", "EmptyRoomTtl", "PlayerTtl", "MaxMembers", "Flag", "PluginName", "Attr", "ExpectMembers", "LobbyAttrKeys", "Members", "MemberCount", "MasterActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.SessionOpenRequest), global::LeanCloud.Play.Protocol.SessionOpenRequest.Parser, new[]{ "AppId", "PeerId", "GameVersion", "SdkVersion", "ProtocolVersion", "T", "N", "S", "ConfigBitmap" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.CreateRoomRequest), global::LeanCloud.Play.Protocol.CreateRoomRequest.Parser, new[]{ "RoomOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.CreateRoomResponse), global::LeanCloud.Play.Protocol.CreateRoomResponse.Parser, new[]{ "RoomOptions", "Addr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.JoinRoomRequest), global::LeanCloud.Play.Protocol.JoinRoomRequest.Parser, new[]{ "Rejoin", "RoomOptions", "ExpectAttr", "PiggybackPeerId", "CreateOnNotFound" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.JoinRoomResponse), global::LeanCloud.Play.Protocol.JoinRoomResponse.Parser, new[]{ "RoomOptions", "Addr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.JoinRoomNotification), global::LeanCloud.Play.Protocol.JoinRoomNotification.Parser, new[]{ "Member" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.LeftRoomNotification), global::LeanCloud.Play.Protocol.LeftRoomNotification.Parser, new[]{ "ActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.KickMemberRequest), global::LeanCloud.Play.Protocol.KickMemberRequest.Parser, new[]{ "TargetActorId", "AppInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.KickMemberResponse), global::LeanCloud.Play.Protocol.KickMemberResponse.Parser, new[]{ "TargetActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdatePropertyRequest), global::LeanCloud.Play.Protocol.UpdatePropertyRequest.Parser, new[]{ "TargetActorId", "ExpectAttr", "Attr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdatePropertyResponse), global::LeanCloud.Play.Protocol.UpdatePropertyResponse.Parser, new[]{ "Attr", "ActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdatePropertyNotification), global::LeanCloud.Play.Protocol.UpdatePropertyNotification.Parser, new[]{ "Attr", "ActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest), global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest.Parser, new[]{ "ExpectSysAttr", "SysAttr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse), global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse.Parser, new[]{ "SysAttr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification), global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification.Parser, new[]{ "SysAttr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateMasterClientRequest), global::LeanCloud.Play.Protocol.UpdateMasterClientRequest.Parser, new[]{ "MasterActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateMasterClientResponse), global::LeanCloud.Play.Protocol.UpdateMasterClientResponse.Parser, new[]{ "MasterActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.UpdateMasterClientNotification), global::LeanCloud.Play.Protocol.UpdateMasterClientNotification.Parser, new[]{ "MasterActorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RoomNotification), global::LeanCloud.Play.Protocol.RoomNotification.Parser, new[]{ "InitByActor", "AppInfo", "ByMaster", "JoinRoom", "UpdateProperty", "UpdateSysProperty", "UpdateMasterClient", "LeftRoom" }, new[]{ "Notification" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.DirectCommand), global::LeanCloud.Play.Protocol.DirectCommand.Parser, new[]{ "Cached", "EventId", "ReceiverGroup", "CachingOption", "EventOptions", "ToActorIds", "Msg", "Timestamp", "FromActorId", "I" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.AckCommand), global::LeanCloud.Play.Protocol.AckCommand.Parser, new[]{ "Timestamp", "I" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.EventsCommand), global::LeanCloud.Play.Protocol.EventsCommand.Parser, new[]{ "Events" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.JoinLobbyRequest), global::LeanCloud.Play.Protocol.JoinLobbyRequest.Parser, new[]{ "LobbyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RoomListCommand), global::LeanCloud.Play.Protocol.RoomListCommand.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.AppStatistic), global::LeanCloud.Play.Protocol.AppStatistic.Parser, new[]{ "CountOfRooms", "CountOfPlayersOnRouter", "CountOfPlayersInRooms", "CountOfPlayers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.StatisticCommand), global::LeanCloud.Play.Protocol.StatisticCommand.Parser, new[]{ "AppStats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.ErrorCommand), global::LeanCloud.Play.Protocol.ErrorCommand.Parser, new[]{ "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.RequestMessage), global::LeanCloud.Play.Protocol.RequestMessage.Parser, new[]{ "I", "SessionOpen", "CreateRoom", "JoinRoom", "UpdateProperty", "UpdateSysProperty", "UpdateMasterClient", "KickMember", "JoinLobby" }, new[]{ "Request" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.ResponseMessage), global::LeanCloud.Play.Protocol.ResponseMessage.Parser, new[]{ "I", "ErrorInfo", "CreateRoom", "JoinRoom", "UpdateProperty", "UpdateSysProperty", "UpdateMasterClient", "KickMember", "Ack" }, new[]{ "Response" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.Body), global::LeanCloud.Play.Protocol.Body.Parser, new[]{ "Request", "Response", "Direct", "RoomNotification", "Events", "Statistic", "RoomList", "Error" }, new[]{ "Body" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LeanCloud.Play.Protocol.Command), global::LeanCloud.Play.Protocol.Command.Parser, new[]{ "Cmd", "Op", "Body" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("unknown")] Unknown = 0,
    [pbr::OriginalName("session")] Session = 1,
    [pbr::OriginalName("conv")] Conv = 2,
    [pbr::OriginalName("direct")] Direct = 3,
    [pbr::OriginalName("error")] Error = 4,
    [pbr::OriginalName("lobby")] Lobby = 5,
    [pbr::OriginalName("statistic")] Statistic = 6,
    [pbr::OriginalName("events")] Events = 7,
    [pbr::OriginalName("ack")] Ack = 8,
  }

  public enum OpType {
    /// <summary>
    /// session
    /// </summary>
    [pbr::OriginalName("none")] None = 0,
    [pbr::OriginalName("open")] Open = 1,
    [pbr::OriginalName("opened")] Opened = 2,
    [pbr::OriginalName("close")] Close = 3,
    [pbr::OriginalName("closed")] Closed = 4,
    /// <summary>
    /// conv
    /// </summary>
    [pbr::OriginalName("start")] Start = 30,
    [pbr::OriginalName("started")] Started = 31,
    [pbr::OriginalName("add_random")] AddRandom = 32,
    [pbr::OriginalName("random_added")] RandomAdded = 33,
    [pbr::OriginalName("match_random")] MatchRandom = 34,
    [pbr::OriginalName("random_matched")] RandomMatched = 35,
    [pbr::OriginalName("add")] Add = 36,
    [pbr::OriginalName("added")] Added = 37,
    [pbr::OriginalName("members_joined")] MembersJoined = 38,
    [pbr::OriginalName("members_online")] MembersOnline = 39,
    [pbr::OriginalName("remove")] Remove = 40,
    [pbr::OriginalName("removed")] Removed = 41,
    [pbr::OriginalName("members_left")] MembersLeft = 42,
    [pbr::OriginalName("members_offline")] MembersOffline = 43,
    [pbr::OriginalName("update_master_client")] UpdateMasterClient = 44,
    [pbr::OriginalName("master_client_updated")] MasterClientUpdated = 45,
    [pbr::OriginalName("master_client_changed")] MasterClientChanged = 46,
    [pbr::OriginalName("update")] Update = 47,
    [pbr::OriginalName("updated")] Updated = 48,
    [pbr::OriginalName("updated_notify")] UpdatedNotify = 49,
    [pbr::OriginalName("update_system_property")] UpdateSystemProperty = 50,
    [pbr::OriginalName("system_property_updated")] SystemPropertyUpdated = 51,
    [pbr::OriginalName("system_property_updated_notify")] SystemPropertyUpdatedNotify = 52,
    [pbr::OriginalName("opened_notify")] OpenedNotify = 53,
    [pbr::OriginalName("visible")] Visible = 54,
    [pbr::OriginalName("visible_notify")] VisibleNotify = 55,
    [pbr::OriginalName("update_player_prop")] UpdatePlayerProp = 56,
    [pbr::OriginalName("player_prop_updated")] PlayerPropUpdated = 57,
    [pbr::OriginalName("player_props")] PlayerProps = 58,
    [pbr::OriginalName("kick")] Kick = 59,
    [pbr::OriginalName("kicked")] Kicked = 60,
    [pbr::OriginalName("kicked_notice")] KickedNotice = 61,
    [pbr::OriginalName("room_list")] RoomList = 100,
    [pbr::OriginalName("find_friends")] FindFriends = 101,
    [pbr::OriginalName("found_friends")] FoundFriends = 102,
  }

  #endregion

  #region Messages
  public sealed partial class IntValue : pb::IMessage<IntValue> {
    private static readonly pb::MessageParser<IntValue> _parser = new pb::MessageParser<IntValue>(() => new IntValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntValue(IntValue other) : this() {
      val_ = other.val_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntValue Clone() {
      return new IntValue(this);
    }

    /// <summary>Field number for the "val" field.</summary>
    public const int ValFieldNumber = 1;
    private int val_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Val {
      get { return val_; }
      set {
        val_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Val != other.Val) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Val != 0) hash ^= Val.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Val != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Val);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Val != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Val);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntValue other) {
      if (other == null) {
        return;
      }
      if (other.Val != 0) {
        Val = other.Val;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Val = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomSystemProperty : pb::IMessage<RoomSystemProperty> {
    private static readonly pb::MessageParser<RoomSystemProperty> _parser = new pb::MessageParser<RoomSystemProperty>(() => new RoomSystemProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomSystemProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomSystemProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomSystemProperty(RoomSystemProperty other) : this() {
      Open = other.Open;
      Visible = other.Visible;
      expectMembers_ = other.expectMembers_;
      maxMembers_ = other.maxMembers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomSystemProperty Clone() {
      return new RoomSystemProperty(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_open_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }


    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_visible_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Visible {
      get { return visible_; }
      set {
        visible_ = value;
      }
    }


    /// <summary>Field number for the "expect_members" field.</summary>
    public const int ExpectMembersFieldNumber = 3;
    private string expectMembers_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpectMembers {
      get { return expectMembers_; }
      set {
        expectMembers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_members" field.</summary>
    public const int MaxMembersFieldNumber = 4;
    private int maxMembers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMembers {
      get { return maxMembers_; }
      set {
        maxMembers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomSystemProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomSystemProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Open != other.Open) return false;
      if (Visible != other.Visible) return false;
      if (ExpectMembers != other.ExpectMembers) return false;
      if (MaxMembers != other.MaxMembers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (open_ != null) hash ^= Open.GetHashCode();
      if (visible_ != null) hash ^= Visible.GetHashCode();
      if (ExpectMembers.Length != 0) hash ^= ExpectMembers.GetHashCode();
      if (MaxMembers != 0) hash ^= MaxMembers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (open_ != null) {
        _single_open_codec.WriteTagAndValue(output, Open);
      }
      if (visible_ != null) {
        _single_visible_codec.WriteTagAndValue(output, Visible);
      }
      if (ExpectMembers.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExpectMembers);
      }
      if (MaxMembers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxMembers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (open_ != null) {
        size += _single_open_codec.CalculateSizeWithTag(Open);
      }
      if (visible_ != null) {
        size += _single_visible_codec.CalculateSizeWithTag(Visible);
      }
      if (ExpectMembers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpectMembers);
      }
      if (MaxMembers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMembers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomSystemProperty other) {
      if (other == null) {
        return;
      }
      if (other.open_ != null) {
        if (open_ == null || other.Open != false) {
          Open = other.Open;
        }
      }
      if (other.visible_ != null) {
        if (visible_ == null || other.Visible != false) {
          Visible = other.Visible;
        }
      }
      if (other.ExpectMembers.Length != 0) {
        ExpectMembers = other.ExpectMembers;
      }
      if (other.MaxMembers != 0) {
        MaxMembers = other.MaxMembers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_open_codec.Read(input);
            if (open_ == null || value != false) {
              Open = value;
            }
            break;
          }
          case 18: {
            bool? value = _single_visible_codec.Read(input);
            if (visible_ == null || value != false) {
              Visible = value;
            }
            break;
          }
          case 26: {
            ExpectMembers = input.ReadString();
            break;
          }
          case 32: {
            MaxMembers = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomMember : pb::IMessage<RoomMember> {
    private static readonly pb::MessageParser<RoomMember> _parser = new pb::MessageParser<RoomMember>(() => new RoomMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMember(RoomMember other) : this() {
      pid_ = other.pid_;
      actorId_ = other.actorId_;
      attr_ = other.attr_;
      inactive_ = other.inactive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMember Clone() {
      return new RoomMember(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 2;
    private int actorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActorId {
      get { return actorId_; }
      set {
        actorId_ = value;
      }
    }

    /// <summary>Field number for the "attr" field.</summary>
    public const int AttrFieldNumber = 3;
    private pb::ByteString attr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Attr {
      get { return attr_; }
      set {
        attr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inactive" field.</summary>
    public const int InactiveFieldNumber = 4;
    private bool inactive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Inactive {
      get { return inactive_; }
      set {
        inactive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (ActorId != other.ActorId) return false;
      if (Attr != other.Attr) return false;
      if (Inactive != other.Inactive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (ActorId != 0) hash ^= ActorId.GetHashCode();
      if (Attr.Length != 0) hash ^= Attr.GetHashCode();
      if (Inactive != false) hash ^= Inactive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (ActorId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActorId);
      }
      if (Attr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Attr);
      }
      if (Inactive != false) {
        output.WriteRawTag(32);
        output.WriteBool(Inactive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (ActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActorId);
      }
      if (Attr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attr);
      }
      if (Inactive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomMember other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      if (other.ActorId != 0) {
        ActorId = other.ActorId;
      }
      if (other.Attr.Length != 0) {
        Attr = other.Attr;
      }
      if (other.Inactive != false) {
        Inactive = other.Inactive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
          case 16: {
            ActorId = input.ReadInt32();
            break;
          }
          case 26: {
            Attr = input.ReadBytes();
            break;
          }
          case 32: {
            Inactive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppInfo : pb::IMessage<AppInfo> {
    private static readonly pb::MessageParser<AppInfo> _parser = new pb::MessageParser<AppInfo>(() => new AppInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo(AppInfo other) : this() {
      appCode_ = other.appCode_;
      appMsg_ = other.appMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInfo Clone() {
      return new AppInfo(this);
    }

    /// <summary>Field number for the "app_code" field.</summary>
    public const int AppCodeFieldNumber = 1;
    private int appCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppCode {
      get { return appCode_; }
      set {
        appCode_ = value;
      }
    }

    /// <summary>Field number for the "app_msg" field.</summary>
    public const int AppMsgFieldNumber = 2;
    private string appMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppMsg {
      get { return appMsg_; }
      set {
        appMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppCode != other.AppCode) return false;
      if (AppMsg != other.AppMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppCode != 0) hash ^= AppCode.GetHashCode();
      if (AppMsg.Length != 0) hash ^= AppMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AppCode);
      }
      if (AppMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppCode);
      }
      if (AppMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInfo other) {
      if (other == null) {
        return;
      }
      if (other.AppCode != 0) {
        AppCode = other.AppCode;
      }
      if (other.AppMsg.Length != 0) {
        AppMsg = other.AppMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AppCode = input.ReadInt32();
            break;
          }
          case 18: {
            AppMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorInfo : pb::IMessage<ErrorInfo> {
    private static readonly pb::MessageParser<ErrorInfo> _parser = new pb::MessageParser<ErrorInfo>(() => new ErrorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo(ErrorInfo other) : this() {
      reasonCode_ = other.reasonCode_;
      detail_ = other.detail_;
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorInfo Clone() {
      return new ErrorInfo(this);
    }

    /// <summary>Field number for the "reason_code" field.</summary>
    public const int ReasonCodeFieldNumber = 1;
    private int reasonCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReasonCode {
      get { return reasonCode_; }
      set {
        reasonCode_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_info" field.</summary>
    public const int AppInfoFieldNumber = 3;
    private global::LeanCloud.Play.Protocol.AppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.AppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReasonCode != other.ReasonCode) return false;
      if (Detail != other.Detail) return false;
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReasonCode != 0) hash ^= ReasonCode.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReasonCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReasonCode);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Detail);
      }
      if (appInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AppInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReasonCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReasonCode);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorInfo other) {
      if (other == null) {
        return;
      }
      if (other.ReasonCode != 0) {
        ReasonCode = other.ReasonCode;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReasonCode = input.ReadInt32();
            break;
          }
          case 18: {
            Detail = input.ReadString();
            break;
          }
          case 26: {
            if (appInfo_ == null) {
              AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomOptions : pb::IMessage<RoomOptions> {
    private static readonly pb::MessageParser<RoomOptions> _parser = new pb::MessageParser<RoomOptions>(() => new RoomOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomOptions(RoomOptions other) : this() {
      cid_ = other.cid_;
      Visible = other.Visible;
      Open = other.Open;
      emptyRoomTtl_ = other.emptyRoomTtl_;
      playerTtl_ = other.playerTtl_;
      maxMembers_ = other.maxMembers_;
      flag_ = other.flag_;
      pluginName_ = other.pluginName_;
      attr_ = other.attr_;
      expectMembers_ = other.expectMembers_.Clone();
      lobbyAttrKeys_ = other.lobbyAttrKeys_.Clone();
      members_ = other.members_.Clone();
      memberCount_ = other.memberCount_;
      masterActorId_ = other.masterActorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomOptions Clone() {
      return new RoomOptions(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private string cid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cid {
      get { return cid_; }
      set {
        cid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_visible_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Visible {
      get { return visible_; }
      set {
        visible_ = value;
      }
    }


    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 3;
    private static readonly pb::FieldCodec<bool?> _single_open_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
    private bool? open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }


    /// <summary>Field number for the "empty_room_ttl" field.</summary>
    public const int EmptyRoomTtlFieldNumber = 4;
    private int emptyRoomTtl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EmptyRoomTtl {
      get { return emptyRoomTtl_; }
      set {
        emptyRoomTtl_ = value;
      }
    }

    /// <summary>Field number for the "player_ttl" field.</summary>
    public const int PlayerTtlFieldNumber = 5;
    private int playerTtl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerTtl {
      get { return playerTtl_; }
      set {
        playerTtl_ = value;
      }
    }

    /// <summary>Field number for the "max_members" field.</summary>
    public const int MaxMembersFieldNumber = 6;
    private int maxMembers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMembers {
      get { return maxMembers_; }
      set {
        maxMembers_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 7;
    private long flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    /// <summary>Field number for the "plugin_name" field.</summary>
    public const int PluginNameFieldNumber = 8;
    private string pluginName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PluginName {
      get { return pluginName_; }
      set {
        pluginName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attr" field.</summary>
    public const int AttrFieldNumber = 9;
    private pb::ByteString attr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Attr {
      get { return attr_; }
      set {
        attr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expect_members" field.</summary>
    public const int ExpectMembersFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_expectMembers_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> expectMembers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExpectMembers {
      get { return expectMembers_; }
    }

    /// <summary>Field number for the "lobby_attr_keys" field.</summary>
    public const int LobbyAttrKeysFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_lobbyAttrKeys_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> lobbyAttrKeys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LobbyAttrKeys {
      get { return lobbyAttrKeys_; }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::LeanCloud.Play.Protocol.RoomMember> _repeated_members_codec
        = pb::FieldCodec.ForMessage(98, global::LeanCloud.Play.Protocol.RoomMember.Parser);
    private readonly pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomMember> members_ = new pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomMember>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomMember> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "member_count" field.</summary>
    public const int MemberCountFieldNumber = 13;
    private int memberCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemberCount {
      get { return memberCount_; }
      set {
        memberCount_ = value;
      }
    }

    /// <summary>Field number for the "master_actor_id" field.</summary>
    public const int MasterActorIdFieldNumber = 14;
    private int masterActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasterActorId {
      get { return masterActorId_; }
      set {
        masterActorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (Visible != other.Visible) return false;
      if (Open != other.Open) return false;
      if (EmptyRoomTtl != other.EmptyRoomTtl) return false;
      if (PlayerTtl != other.PlayerTtl) return false;
      if (MaxMembers != other.MaxMembers) return false;
      if (Flag != other.Flag) return false;
      if (PluginName != other.PluginName) return false;
      if (Attr != other.Attr) return false;
      if(!expectMembers_.Equals(other.expectMembers_)) return false;
      if(!lobbyAttrKeys_.Equals(other.lobbyAttrKeys_)) return false;
      if(!members_.Equals(other.members_)) return false;
      if (MemberCount != other.MemberCount) return false;
      if (MasterActorId != other.MasterActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cid.Length != 0) hash ^= Cid.GetHashCode();
      if (visible_ != null) hash ^= Visible.GetHashCode();
      if (open_ != null) hash ^= Open.GetHashCode();
      if (EmptyRoomTtl != 0) hash ^= EmptyRoomTtl.GetHashCode();
      if (PlayerTtl != 0) hash ^= PlayerTtl.GetHashCode();
      if (MaxMembers != 0) hash ^= MaxMembers.GetHashCode();
      if (Flag != 0L) hash ^= Flag.GetHashCode();
      if (PluginName.Length != 0) hash ^= PluginName.GetHashCode();
      if (Attr.Length != 0) hash ^= Attr.GetHashCode();
      hash ^= expectMembers_.GetHashCode();
      hash ^= lobbyAttrKeys_.GetHashCode();
      hash ^= members_.GetHashCode();
      if (MemberCount != 0) hash ^= MemberCount.GetHashCode();
      if (MasterActorId != 0) hash ^= MasterActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cid);
      }
      if (visible_ != null) {
        _single_visible_codec.WriteTagAndValue(output, Visible);
      }
      if (open_ != null) {
        _single_open_codec.WriteTagAndValue(output, Open);
      }
      if (EmptyRoomTtl != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EmptyRoomTtl);
      }
      if (PlayerTtl != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerTtl);
      }
      if (MaxMembers != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxMembers);
      }
      if (Flag != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Flag);
      }
      if (PluginName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PluginName);
      }
      if (Attr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Attr);
      }
      expectMembers_.WriteTo(output, _repeated_expectMembers_codec);
      lobbyAttrKeys_.WriteTo(output, _repeated_lobbyAttrKeys_codec);
      members_.WriteTo(output, _repeated_members_codec);
      if (MemberCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MemberCount);
      }
      if (MasterActorId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MasterActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cid);
      }
      if (visible_ != null) {
        size += _single_visible_codec.CalculateSizeWithTag(Visible);
      }
      if (open_ != null) {
        size += _single_open_codec.CalculateSizeWithTag(Open);
      }
      if (EmptyRoomTtl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EmptyRoomTtl);
      }
      if (PlayerTtl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerTtl);
      }
      if (MaxMembers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMembers);
      }
      if (Flag != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Flag);
      }
      if (PluginName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginName);
      }
      if (Attr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attr);
      }
      size += expectMembers_.CalculateSize(_repeated_expectMembers_codec);
      size += lobbyAttrKeys_.CalculateSize(_repeated_lobbyAttrKeys_codec);
      size += members_.CalculateSize(_repeated_members_codec);
      if (MemberCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberCount);
      }
      if (MasterActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomOptions other) {
      if (other == null) {
        return;
      }
      if (other.Cid.Length != 0) {
        Cid = other.Cid;
      }
      if (other.visible_ != null) {
        if (visible_ == null || other.Visible != false) {
          Visible = other.Visible;
        }
      }
      if (other.open_ != null) {
        if (open_ == null || other.Open != false) {
          Open = other.Open;
        }
      }
      if (other.EmptyRoomTtl != 0) {
        EmptyRoomTtl = other.EmptyRoomTtl;
      }
      if (other.PlayerTtl != 0) {
        PlayerTtl = other.PlayerTtl;
      }
      if (other.MaxMembers != 0) {
        MaxMembers = other.MaxMembers;
      }
      if (other.Flag != 0L) {
        Flag = other.Flag;
      }
      if (other.PluginName.Length != 0) {
        PluginName = other.PluginName;
      }
      if (other.Attr.Length != 0) {
        Attr = other.Attr;
      }
      expectMembers_.Add(other.expectMembers_);
      lobbyAttrKeys_.Add(other.lobbyAttrKeys_);
      members_.Add(other.members_);
      if (other.MemberCount != 0) {
        MemberCount = other.MemberCount;
      }
      if (other.MasterActorId != 0) {
        MasterActorId = other.MasterActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cid = input.ReadString();
            break;
          }
          case 18: {
            bool? value = _single_visible_codec.Read(input);
            if (visible_ == null || value != false) {
              Visible = value;
            }
            break;
          }
          case 26: {
            bool? value = _single_open_codec.Read(input);
            if (open_ == null || value != false) {
              Open = value;
            }
            break;
          }
          case 32: {
            EmptyRoomTtl = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerTtl = input.ReadInt32();
            break;
          }
          case 48: {
            MaxMembers = input.ReadInt32();
            break;
          }
          case 56: {
            Flag = input.ReadInt64();
            break;
          }
          case 66: {
            PluginName = input.ReadString();
            break;
          }
          case 74: {
            Attr = input.ReadBytes();
            break;
          }
          case 82: {
            expectMembers_.AddEntriesFrom(input, _repeated_expectMembers_codec);
            break;
          }
          case 90: {
            lobbyAttrKeys_.AddEntriesFrom(input, _repeated_lobbyAttrKeys_codec);
            break;
          }
          case 98: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 104: {
            MemberCount = input.ReadInt32();
            break;
          }
          case 112: {
            MasterActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SessionOpenRequest : pb::IMessage<SessionOpenRequest> {
    private static readonly pb::MessageParser<SessionOpenRequest> _parser = new pb::MessageParser<SessionOpenRequest>(() => new SessionOpenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionOpenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionOpenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionOpenRequest(SessionOpenRequest other) : this() {
      appId_ = other.appId_;
      peerId_ = other.peerId_;
      gameVersion_ = other.gameVersion_;
      sdkVersion_ = other.sdkVersion_;
      protocolVersion_ = other.protocolVersion_;
      t_ = other.t_;
      n_ = other.n_;
      s_ = other.s_;
      configBitmap_ = other.configBitmap_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionOpenRequest Clone() {
      return new SessionOpenRequest(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_id" field.</summary>
    public const int PeerIdFieldNumber = 2;
    private string peerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PeerId {
      get { return peerId_; }
      set {
        peerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_version" field.</summary>
    public const int GameVersionFieldNumber = 3;
    private string gameVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameVersion {
      get { return gameVersion_; }
      set {
        gameVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdk_version" field.</summary>
    public const int SdkVersionFieldNumber = 4;
    private string sdkVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkVersion {
      get { return sdkVersion_; }
      set {
        sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 5;
    private string protocolVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "t" field.</summary>
    public const int TFieldNumber = 6;
    private long t_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long T {
      get { return t_; }
      set {
        t_ = value;
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 7;
    private string n_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string N {
      get { return n_; }
      set {
        n_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "s" field.</summary>
    public const int SFieldNumber = 8;
    private string s_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string S {
      get { return s_; }
      set {
        s_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_bitmap" field.</summary>
    public const int ConfigBitmapFieldNumber = 9;
    private long configBitmap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConfigBitmap {
      get { return configBitmap_; }
      set {
        configBitmap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionOpenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionOpenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (PeerId != other.PeerId) return false;
      if (GameVersion != other.GameVersion) return false;
      if (SdkVersion != other.SdkVersion) return false;
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (T != other.T) return false;
      if (N != other.N) return false;
      if (S != other.S) return false;
      if (ConfigBitmap != other.ConfigBitmap) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (PeerId.Length != 0) hash ^= PeerId.GetHashCode();
      if (GameVersion.Length != 0) hash ^= GameVersion.GetHashCode();
      if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
      if (ProtocolVersion.Length != 0) hash ^= ProtocolVersion.GetHashCode();
      if (T != 0L) hash ^= T.GetHashCode();
      if (N.Length != 0) hash ^= N.GetHashCode();
      if (S.Length != 0) hash ^= S.GetHashCode();
      if (ConfigBitmap != 0L) hash ^= ConfigBitmap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppId);
      }
      if (PeerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PeerId);
      }
      if (GameVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameVersion);
      }
      if (SdkVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SdkVersion);
      }
      if (ProtocolVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProtocolVersion);
      }
      if (T != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(T);
      }
      if (N.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(N);
      }
      if (S.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(S);
      }
      if (ConfigBitmap != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ConfigBitmap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (PeerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PeerId);
      }
      if (GameVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameVersion);
      }
      if (SdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
      }
      if (ProtocolVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtocolVersion);
      }
      if (T != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(T);
      }
      if (N.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(N);
      }
      if (S.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(S);
      }
      if (ConfigBitmap != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfigBitmap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionOpenRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.PeerId.Length != 0) {
        PeerId = other.PeerId;
      }
      if (other.GameVersion.Length != 0) {
        GameVersion = other.GameVersion;
      }
      if (other.SdkVersion.Length != 0) {
        SdkVersion = other.SdkVersion;
      }
      if (other.ProtocolVersion.Length != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.T != 0L) {
        T = other.T;
      }
      if (other.N.Length != 0) {
        N = other.N;
      }
      if (other.S.Length != 0) {
        S = other.S;
      }
      if (other.ConfigBitmap != 0L) {
        ConfigBitmap = other.ConfigBitmap;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppId = input.ReadString();
            break;
          }
          case 18: {
            PeerId = input.ReadString();
            break;
          }
          case 26: {
            GameVersion = input.ReadString();
            break;
          }
          case 34: {
            SdkVersion = input.ReadString();
            break;
          }
          case 42: {
            ProtocolVersion = input.ReadString();
            break;
          }
          case 48: {
            T = input.ReadInt64();
            break;
          }
          case 58: {
            N = input.ReadString();
            break;
          }
          case 66: {
            S = input.ReadString();
            break;
          }
          case 72: {
            ConfigBitmap = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomRequest : pb::IMessage<CreateRoomRequest> {
    private static readonly pb::MessageParser<CreateRoomRequest> _parser = new pb::MessageParser<CreateRoomRequest>(() => new CreateRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest(CreateRoomRequest other) : this() {
      roomOptions_ = other.roomOptions_ != null ? other.roomOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomRequest Clone() {
      return new CreateRoomRequest(this);
    }

    /// <summary>Field number for the "room_options" field.</summary>
    public const int RoomOptionsFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomOptions roomOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomOptions RoomOptions {
      get { return roomOptions_; }
      set {
        roomOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomOptions, other.RoomOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomOptions_ != null) hash ^= RoomOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.roomOptions_ != null) {
        if (roomOptions_ == null) {
          RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
        }
        RoomOptions.MergeFrom(other.RoomOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomOptions_ == null) {
              RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
            }
            input.ReadMessage(RoomOptions);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomResponse : pb::IMessage<CreateRoomResponse> {
    private static readonly pb::MessageParser<CreateRoomResponse> _parser = new pb::MessageParser<CreateRoomResponse>(() => new CreateRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse(CreateRoomResponse other) : this() {
      roomOptions_ = other.roomOptions_ != null ? other.roomOptions_.Clone() : null;
      addr_ = other.addr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResponse Clone() {
      return new CreateRoomResponse(this);
    }

    /// <summary>Field number for the "room_options" field.</summary>
    public const int RoomOptionsFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomOptions roomOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomOptions RoomOptions {
      get { return roomOptions_; }
      set {
        roomOptions_ = value;
      }
    }

    /// <summary>Field number for the "addr" field.</summary>
    public const int AddrFieldNumber = 2;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomOptions, other.RoomOptions)) return false;
      if (Addr != other.Addr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomOptions_ != null) hash ^= RoomOptions.GetHashCode();
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomOptions);
      }
      if (Addr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Addr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomOptions);
      }
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.roomOptions_ != null) {
        if (roomOptions_ == null) {
          RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
        }
        RoomOptions.MergeFrom(other.RoomOptions);
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomOptions_ == null) {
              RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
            }
            input.ReadMessage(RoomOptions);
            break;
          }
          case 18: {
            Addr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest> {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      rejoin_ = other.rejoin_;
      roomOptions_ = other.roomOptions_ != null ? other.roomOptions_.Clone() : null;
      expectAttr_ = other.expectAttr_;
      piggybackPeerId_ = other.piggybackPeerId_;
      createOnNotFound_ = other.createOnNotFound_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "rejoin" field.</summary>
    public const int RejoinFieldNumber = 1;
    private bool rejoin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rejoin {
      get { return rejoin_; }
      set {
        rejoin_ = value;
      }
    }

    /// <summary>Field number for the "room_options" field.</summary>
    public const int RoomOptionsFieldNumber = 2;
    private global::LeanCloud.Play.Protocol.RoomOptions roomOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomOptions RoomOptions {
      get { return roomOptions_; }
      set {
        roomOptions_ = value;
      }
    }

    /// <summary>Field number for the "expect_attr" field.</summary>
    public const int ExpectAttrFieldNumber = 3;
    private pb::ByteString expectAttr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExpectAttr {
      get { return expectAttr_; }
      set {
        expectAttr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "piggyback_peer_id" field.</summary>
    public const int PiggybackPeerIdFieldNumber = 4;
    private string piggybackPeerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PiggybackPeerId {
      get { return piggybackPeerId_; }
      set {
        piggybackPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_on_not_found" field.</summary>
    public const int CreateOnNotFoundFieldNumber = 5;
    private bool createOnNotFound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CreateOnNotFound {
      get { return createOnNotFound_; }
      set {
        createOnNotFound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rejoin != other.Rejoin) return false;
      if (!object.Equals(RoomOptions, other.RoomOptions)) return false;
      if (ExpectAttr != other.ExpectAttr) return false;
      if (PiggybackPeerId != other.PiggybackPeerId) return false;
      if (CreateOnNotFound != other.CreateOnNotFound) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rejoin != false) hash ^= Rejoin.GetHashCode();
      if (roomOptions_ != null) hash ^= RoomOptions.GetHashCode();
      if (ExpectAttr.Length != 0) hash ^= ExpectAttr.GetHashCode();
      if (PiggybackPeerId.Length != 0) hash ^= PiggybackPeerId.GetHashCode();
      if (CreateOnNotFound != false) hash ^= CreateOnNotFound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rejoin != false) {
        output.WriteRawTag(8);
        output.WriteBool(Rejoin);
      }
      if (roomOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomOptions);
      }
      if (ExpectAttr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ExpectAttr);
      }
      if (PiggybackPeerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PiggybackPeerId);
      }
      if (CreateOnNotFound != false) {
        output.WriteRawTag(40);
        output.WriteBool(CreateOnNotFound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rejoin != false) {
        size += 1 + 1;
      }
      if (roomOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomOptions);
      }
      if (ExpectAttr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExpectAttr);
      }
      if (PiggybackPeerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PiggybackPeerId);
      }
      if (CreateOnNotFound != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rejoin != false) {
        Rejoin = other.Rejoin;
      }
      if (other.roomOptions_ != null) {
        if (roomOptions_ == null) {
          RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
        }
        RoomOptions.MergeFrom(other.RoomOptions);
      }
      if (other.ExpectAttr.Length != 0) {
        ExpectAttr = other.ExpectAttr;
      }
      if (other.PiggybackPeerId.Length != 0) {
        PiggybackPeerId = other.PiggybackPeerId;
      }
      if (other.CreateOnNotFound != false) {
        CreateOnNotFound = other.CreateOnNotFound;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rejoin = input.ReadBool();
            break;
          }
          case 18: {
            if (roomOptions_ == null) {
              RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
            }
            input.ReadMessage(RoomOptions);
            break;
          }
          case 26: {
            ExpectAttr = input.ReadBytes();
            break;
          }
          case 34: {
            PiggybackPeerId = input.ReadString();
            break;
          }
          case 40: {
            CreateOnNotFound = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomResponse : pb::IMessage<JoinRoomResponse> {
    private static readonly pb::MessageParser<JoinRoomResponse> _parser = new pb::MessageParser<JoinRoomResponse>(() => new JoinRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse(JoinRoomResponse other) : this() {
      roomOptions_ = other.roomOptions_ != null ? other.roomOptions_.Clone() : null;
      addr_ = other.addr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse Clone() {
      return new JoinRoomResponse(this);
    }

    /// <summary>Field number for the "room_options" field.</summary>
    public const int RoomOptionsFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomOptions roomOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomOptions RoomOptions {
      get { return roomOptions_; }
      set {
        roomOptions_ = value;
      }
    }

    /// <summary>Field number for the "addr" field.</summary>
    public const int AddrFieldNumber = 2;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomOptions, other.RoomOptions)) return false;
      if (Addr != other.Addr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomOptions_ != null) hash ^= RoomOptions.GetHashCode();
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomOptions_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomOptions);
      }
      if (Addr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Addr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomOptions);
      }
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.roomOptions_ != null) {
        if (roomOptions_ == null) {
          RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
        }
        RoomOptions.MergeFrom(other.RoomOptions);
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomOptions_ == null) {
              RoomOptions = new global::LeanCloud.Play.Protocol.RoomOptions();
            }
            input.ReadMessage(RoomOptions);
            break;
          }
          case 18: {
            Addr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomNotification : pb::IMessage<JoinRoomNotification> {
    private static readonly pb::MessageParser<JoinRoomNotification> _parser = new pb::MessageParser<JoinRoomNotification>(() => new JoinRoomNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomNotification(JoinRoomNotification other) : this() {
      member_ = other.member_ != null ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomNotification Clone() {
      return new JoinRoomNotification(this);
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomMember member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomMember Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (member_ != null) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (member_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomNotification other) {
      if (other == null) {
        return;
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::LeanCloud.Play.Protocol.RoomMember();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (member_ == null) {
              Member = new global::LeanCloud.Play.Protocol.RoomMember();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeftRoomNotification : pb::IMessage<LeftRoomNotification> {
    private static readonly pb::MessageParser<LeftRoomNotification> _parser = new pb::MessageParser<LeftRoomNotification>(() => new LeftRoomNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeftRoomNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftRoomNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftRoomNotification(LeftRoomNotification other) : this() {
      actorId_ = other.actorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftRoomNotification Clone() {
      return new LeftRoomNotification(this);
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 1;
    private int actorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActorId {
      get { return actorId_; }
      set {
        actorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeftRoomNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeftRoomNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActorId != other.ActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActorId != 0) hash ^= ActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeftRoomNotification other) {
      if (other == null) {
        return;
      }
      if (other.ActorId != 0) {
        ActorId = other.ActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickMemberRequest : pb::IMessage<KickMemberRequest> {
    private static readonly pb::MessageParser<KickMemberRequest> _parser = new pb::MessageParser<KickMemberRequest>(() => new KickMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberRequest(KickMemberRequest other) : this() {
      targetActorId_ = other.targetActorId_;
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberRequest Clone() {
      return new KickMemberRequest(this);
    }

    /// <summary>Field number for the "target_actor_id" field.</summary>
    public const int TargetActorIdFieldNumber = 1;
    private int targetActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetActorId {
      get { return targetActorId_; }
      set {
        targetActorId_ = value;
      }
    }

    /// <summary>Field number for the "app_info" field.</summary>
    public const int AppInfoFieldNumber = 2;
    private global::LeanCloud.Play.Protocol.AppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.AppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetActorId != other.TargetActorId) return false;
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetActorId != 0) hash ^= TargetActorId.GetHashCode();
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetActorId);
      }
      if (appInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetActorId);
      }
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.TargetActorId != 0) {
        TargetActorId = other.TargetActorId;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetActorId = input.ReadInt32();
            break;
          }
          case 18: {
            if (appInfo_ == null) {
              AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickMemberResponse : pb::IMessage<KickMemberResponse> {
    private static readonly pb::MessageParser<KickMemberResponse> _parser = new pb::MessageParser<KickMemberResponse>(() => new KickMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberResponse(KickMemberResponse other) : this() {
      targetActorId_ = other.targetActorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickMemberResponse Clone() {
      return new KickMemberResponse(this);
    }

    /// <summary>Field number for the "target_actor_id" field.</summary>
    public const int TargetActorIdFieldNumber = 1;
    private int targetActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetActorId {
      get { return targetActorId_; }
      set {
        targetActorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetActorId != other.TargetActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetActorId != 0) hash ^= TargetActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.TargetActorId != 0) {
        TargetActorId = other.TargetActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdatePropertyRequest : pb::IMessage<UpdatePropertyRequest> {
    private static readonly pb::MessageParser<UpdatePropertyRequest> _parser = new pb::MessageParser<UpdatePropertyRequest>(() => new UpdatePropertyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePropertyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyRequest(UpdatePropertyRequest other) : this() {
      targetActorId_ = other.targetActorId_;
      expectAttr_ = other.expectAttr_;
      attr_ = other.attr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyRequest Clone() {
      return new UpdatePropertyRequest(this);
    }

    /// <summary>Field number for the "target_actor_id" field.</summary>
    public const int TargetActorIdFieldNumber = 1;
    private int targetActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetActorId {
      get { return targetActorId_; }
      set {
        targetActorId_ = value;
      }
    }

    /// <summary>Field number for the "expect_attr" field.</summary>
    public const int ExpectAttrFieldNumber = 2;
    private pb::ByteString expectAttr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExpectAttr {
      get { return expectAttr_; }
      set {
        expectAttr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attr" field.</summary>
    public const int AttrFieldNumber = 3;
    private pb::ByteString attr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Attr {
      get { return attr_; }
      set {
        attr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePropertyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePropertyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetActorId != other.TargetActorId) return false;
      if (ExpectAttr != other.ExpectAttr) return false;
      if (Attr != other.Attr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetActorId != 0) hash ^= TargetActorId.GetHashCode();
      if (ExpectAttr.Length != 0) hash ^= ExpectAttr.GetHashCode();
      if (Attr.Length != 0) hash ^= Attr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetActorId);
      }
      if (ExpectAttr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ExpectAttr);
      }
      if (Attr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Attr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetActorId);
      }
      if (ExpectAttr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExpectAttr);
      }
      if (Attr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePropertyRequest other) {
      if (other == null) {
        return;
      }
      if (other.TargetActorId != 0) {
        TargetActorId = other.TargetActorId;
      }
      if (other.ExpectAttr.Length != 0) {
        ExpectAttr = other.ExpectAttr;
      }
      if (other.Attr.Length != 0) {
        Attr = other.Attr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetActorId = input.ReadInt32();
            break;
          }
          case 18: {
            ExpectAttr = input.ReadBytes();
            break;
          }
          case 26: {
            Attr = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdatePropertyResponse : pb::IMessage<UpdatePropertyResponse> {
    private static readonly pb::MessageParser<UpdatePropertyResponse> _parser = new pb::MessageParser<UpdatePropertyResponse>(() => new UpdatePropertyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePropertyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyResponse(UpdatePropertyResponse other) : this() {
      attr_ = other.attr_;
      actorId_ = other.actorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyResponse Clone() {
      return new UpdatePropertyResponse(this);
    }

    /// <summary>Field number for the "attr" field.</summary>
    public const int AttrFieldNumber = 1;
    private pb::ByteString attr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Attr {
      get { return attr_; }
      set {
        attr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 2;
    private int actorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActorId {
      get { return actorId_; }
      set {
        actorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePropertyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePropertyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Attr != other.Attr) return false;
      if (ActorId != other.ActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attr.Length != 0) hash ^= Attr.GetHashCode();
      if (ActorId != 0) hash ^= ActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Attr);
      }
      if (ActorId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attr);
      }
      if (ActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePropertyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Attr.Length != 0) {
        Attr = other.Attr;
      }
      if (other.ActorId != 0) {
        ActorId = other.ActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Attr = input.ReadBytes();
            break;
          }
          case 16: {
            ActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdatePropertyNotification : pb::IMessage<UpdatePropertyNotification> {
    private static readonly pb::MessageParser<UpdatePropertyNotification> _parser = new pb::MessageParser<UpdatePropertyNotification>(() => new UpdatePropertyNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePropertyNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyNotification(UpdatePropertyNotification other) : this() {
      attr_ = other.attr_;
      actorId_ = other.actorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePropertyNotification Clone() {
      return new UpdatePropertyNotification(this);
    }

    /// <summary>Field number for the "attr" field.</summary>
    public const int AttrFieldNumber = 1;
    private pb::ByteString attr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Attr {
      get { return attr_; }
      set {
        attr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 2;
    private int actorId_;
    /// <summary>
    /// 0 表示更改了房间属性，非 0 表示更改某 Player 的属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActorId {
      get { return actorId_; }
      set {
        actorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePropertyNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePropertyNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Attr != other.Attr) return false;
      if (ActorId != other.ActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attr.Length != 0) hash ^= Attr.GetHashCode();
      if (ActorId != 0) hash ^= ActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Attr);
      }
      if (ActorId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attr);
      }
      if (ActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePropertyNotification other) {
      if (other == null) {
        return;
      }
      if (other.Attr.Length != 0) {
        Attr = other.Attr;
      }
      if (other.ActorId != 0) {
        ActorId = other.ActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Attr = input.ReadBytes();
            break;
          }
          case 16: {
            ActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSysPropertyRequest : pb::IMessage<UpdateSysPropertyRequest> {
    private static readonly pb::MessageParser<UpdateSysPropertyRequest> _parser = new pb::MessageParser<UpdateSysPropertyRequest>(() => new UpdateSysPropertyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSysPropertyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyRequest(UpdateSysPropertyRequest other) : this() {
      expectSysAttr_ = other.expectSysAttr_ != null ? other.expectSysAttr_.Clone() : null;
      sysAttr_ = other.sysAttr_ != null ? other.sysAttr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyRequest Clone() {
      return new UpdateSysPropertyRequest(this);
    }

    /// <summary>Field number for the "expect_sys_attr" field.</summary>
    public const int ExpectSysAttrFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomSystemProperty expectSysAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomSystemProperty ExpectSysAttr {
      get { return expectSysAttr_; }
      set {
        expectSysAttr_ = value;
      }
    }

    /// <summary>Field number for the "sys_attr" field.</summary>
    public const int SysAttrFieldNumber = 2;
    private global::LeanCloud.Play.Protocol.RoomSystemProperty sysAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomSystemProperty SysAttr {
      get { return sysAttr_; }
      set {
        sysAttr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSysPropertyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSysPropertyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExpectSysAttr, other.ExpectSysAttr)) return false;
      if (!object.Equals(SysAttr, other.SysAttr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (expectSysAttr_ != null) hash ^= ExpectSysAttr.GetHashCode();
      if (sysAttr_ != null) hash ^= SysAttr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (expectSysAttr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExpectSysAttr);
      }
      if (sysAttr_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SysAttr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (expectSysAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectSysAttr);
      }
      if (sysAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SysAttr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSysPropertyRequest other) {
      if (other == null) {
        return;
      }
      if (other.expectSysAttr_ != null) {
        if (expectSysAttr_ == null) {
          ExpectSysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
        }
        ExpectSysAttr.MergeFrom(other.ExpectSysAttr);
      }
      if (other.sysAttr_ != null) {
        if (sysAttr_ == null) {
          SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
        }
        SysAttr.MergeFrom(other.SysAttr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (expectSysAttr_ == null) {
              ExpectSysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
            }
            input.ReadMessage(ExpectSysAttr);
            break;
          }
          case 18: {
            if (sysAttr_ == null) {
              SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
            }
            input.ReadMessage(SysAttr);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSysPropertyResponse : pb::IMessage<UpdateSysPropertyResponse> {
    private static readonly pb::MessageParser<UpdateSysPropertyResponse> _parser = new pb::MessageParser<UpdateSysPropertyResponse>(() => new UpdateSysPropertyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSysPropertyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyResponse(UpdateSysPropertyResponse other) : this() {
      sysAttr_ = other.sysAttr_ != null ? other.sysAttr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyResponse Clone() {
      return new UpdateSysPropertyResponse(this);
    }

    /// <summary>Field number for the "sys_attr" field.</summary>
    public const int SysAttrFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomSystemProperty sysAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomSystemProperty SysAttr {
      get { return sysAttr_; }
      set {
        sysAttr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSysPropertyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSysPropertyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SysAttr, other.SysAttr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sysAttr_ != null) hash ^= SysAttr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sysAttr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SysAttr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sysAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SysAttr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSysPropertyResponse other) {
      if (other == null) {
        return;
      }
      if (other.sysAttr_ != null) {
        if (sysAttr_ == null) {
          SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
        }
        SysAttr.MergeFrom(other.SysAttr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sysAttr_ == null) {
              SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
            }
            input.ReadMessage(SysAttr);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSysPropertyNotification : pb::IMessage<UpdateSysPropertyNotification> {
    private static readonly pb::MessageParser<UpdateSysPropertyNotification> _parser = new pb::MessageParser<UpdateSysPropertyNotification>(() => new UpdateSysPropertyNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSysPropertyNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyNotification(UpdateSysPropertyNotification other) : this() {
      sysAttr_ = other.sysAttr_ != null ? other.sysAttr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSysPropertyNotification Clone() {
      return new UpdateSysPropertyNotification(this);
    }

    /// <summary>Field number for the "sys_attr" field.</summary>
    public const int SysAttrFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.RoomSystemProperty sysAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomSystemProperty SysAttr {
      get { return sysAttr_; }
      set {
        sysAttr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSysPropertyNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSysPropertyNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SysAttr, other.SysAttr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sysAttr_ != null) hash ^= SysAttr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sysAttr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SysAttr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sysAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SysAttr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSysPropertyNotification other) {
      if (other == null) {
        return;
      }
      if (other.sysAttr_ != null) {
        if (sysAttr_ == null) {
          SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
        }
        SysAttr.MergeFrom(other.SysAttr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sysAttr_ == null) {
              SysAttr = new global::LeanCloud.Play.Protocol.RoomSystemProperty();
            }
            input.ReadMessage(SysAttr);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMasterClientRequest : pb::IMessage<UpdateMasterClientRequest> {
    private static readonly pb::MessageParser<UpdateMasterClientRequest> _parser = new pb::MessageParser<UpdateMasterClientRequest>(() => new UpdateMasterClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMasterClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientRequest(UpdateMasterClientRequest other) : this() {
      masterActorId_ = other.masterActorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientRequest Clone() {
      return new UpdateMasterClientRequest(this);
    }

    /// <summary>Field number for the "master_actor_id" field.</summary>
    public const int MasterActorIdFieldNumber = 1;
    private int masterActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasterActorId {
      get { return masterActorId_; }
      set {
        masterActorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMasterClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMasterClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MasterActorId != other.MasterActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MasterActorId != 0) hash ^= MasterActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MasterActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MasterActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MasterActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMasterClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.MasterActorId != 0) {
        MasterActorId = other.MasterActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MasterActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMasterClientResponse : pb::IMessage<UpdateMasterClientResponse> {
    private static readonly pb::MessageParser<UpdateMasterClientResponse> _parser = new pb::MessageParser<UpdateMasterClientResponse>(() => new UpdateMasterClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMasterClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientResponse(UpdateMasterClientResponse other) : this() {
      masterActorId_ = other.masterActorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientResponse Clone() {
      return new UpdateMasterClientResponse(this);
    }

    /// <summary>Field number for the "master_actor_id" field.</summary>
    public const int MasterActorIdFieldNumber = 1;
    private int masterActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasterActorId {
      get { return masterActorId_; }
      set {
        masterActorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMasterClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMasterClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MasterActorId != other.MasterActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MasterActorId != 0) hash ^= MasterActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MasterActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MasterActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MasterActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMasterClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.MasterActorId != 0) {
        MasterActorId = other.MasterActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MasterActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMasterClientNotification : pb::IMessage<UpdateMasterClientNotification> {
    private static readonly pb::MessageParser<UpdateMasterClientNotification> _parser = new pb::MessageParser<UpdateMasterClientNotification>(() => new UpdateMasterClientNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMasterClientNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientNotification(UpdateMasterClientNotification other) : this() {
      masterActorId_ = other.masterActorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterClientNotification Clone() {
      return new UpdateMasterClientNotification(this);
    }

    /// <summary>Field number for the "master_actor_id" field.</summary>
    public const int MasterActorIdFieldNumber = 1;
    private int masterActorId_;
    /// <summary>
    /// 0 表示目前没有 master
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasterActorId {
      get { return masterActorId_; }
      set {
        masterActorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMasterClientNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMasterClientNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MasterActorId != other.MasterActorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MasterActorId != 0) hash ^= MasterActorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MasterActorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MasterActorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MasterActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterActorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMasterClientNotification other) {
      if (other == null) {
        return;
      }
      if (other.MasterActorId != 0) {
        MasterActorId = other.MasterActorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MasterActorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomNotification : pb::IMessage<RoomNotification> {
    private static readonly pb::MessageParser<RoomNotification> _parser = new pb::MessageParser<RoomNotification>(() => new RoomNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomNotification(RoomNotification other) : this() {
      initByActor_ = other.initByActor_;
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      byMaster_ = other.byMaster_;
      switch (other.NotificationCase) {
        case NotificationOneofCase.JoinRoom:
          JoinRoom = other.JoinRoom.Clone();
          break;
        case NotificationOneofCase.UpdateProperty:
          UpdateProperty = other.UpdateProperty.Clone();
          break;
        case NotificationOneofCase.UpdateSysProperty:
          UpdateSysProperty = other.UpdateSysProperty.Clone();
          break;
        case NotificationOneofCase.UpdateMasterClient:
          UpdateMasterClient = other.UpdateMasterClient.Clone();
          break;
        case NotificationOneofCase.LeftRoom:
          LeftRoom = other.LeftRoom.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomNotification Clone() {
      return new RoomNotification(this);
    }

    /// <summary>Field number for the "init_by_actor" field.</summary>
    public const int InitByActorFieldNumber = 1;
    private int initByActor_;
    /// <summary>
    /// 0 表示系统触发操作的通知
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitByActor {
      get { return initByActor_; }
      set {
        initByActor_ = value;
      }
    }

    /// <summary>Field number for the "app_info" field.</summary>
    public const int AppInfoFieldNumber = 3;
    private global::LeanCloud.Play.Protocol.AppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.AppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    /// <summary>Field number for the "by_master" field.</summary>
    public const int ByMasterFieldNumber = 4;
    private bool byMaster_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ByMaster {
      get { return byMaster_; }
      set {
        byMaster_ = value;
      }
    }

    /// <summary>Field number for the "join_room" field.</summary>
    public const int JoinRoomFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.JoinRoomNotification JoinRoom {
      get { return notificationCase_ == NotificationOneofCase.JoinRoom ? (global::LeanCloud.Play.Protocol.JoinRoomNotification) notification_ : null; }
      set {
        notification_ = value;
        notificationCase_ = value == null ? NotificationOneofCase.None : NotificationOneofCase.JoinRoom;
      }
    }

    /// <summary>Field number for the "update_property" field.</summary>
    public const int UpdatePropertyFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdatePropertyNotification UpdateProperty {
      get { return notificationCase_ == NotificationOneofCase.UpdateProperty ? (global::LeanCloud.Play.Protocol.UpdatePropertyNotification) notification_ : null; }
      set {
        notification_ = value;
        notificationCase_ = value == null ? NotificationOneofCase.None : NotificationOneofCase.UpdateProperty;
      }
    }

    /// <summary>Field number for the "update_sys_property" field.</summary>
    public const int UpdateSysPropertyFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification UpdateSysProperty {
      get { return notificationCase_ == NotificationOneofCase.UpdateSysProperty ? (global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification) notification_ : null; }
      set {
        notification_ = value;
        notificationCase_ = value == null ? NotificationOneofCase.None : NotificationOneofCase.UpdateSysProperty;
      }
    }

    /// <summary>Field number for the "update_master_client" field.</summary>
    public const int UpdateMasterClientFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateMasterClientNotification UpdateMasterClient {
      get { return notificationCase_ == NotificationOneofCase.UpdateMasterClient ? (global::LeanCloud.Play.Protocol.UpdateMasterClientNotification) notification_ : null; }
      set {
        notification_ = value;
        notificationCase_ = value == null ? NotificationOneofCase.None : NotificationOneofCase.UpdateMasterClient;
      }
    }

    /// <summary>Field number for the "left_room" field.</summary>
    public const int LeftRoomFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.LeftRoomNotification LeftRoom {
      get { return notificationCase_ == NotificationOneofCase.LeftRoom ? (global::LeanCloud.Play.Protocol.LeftRoomNotification) notification_ : null; }
      set {
        notification_ = value;
        notificationCase_ = value == null ? NotificationOneofCase.None : NotificationOneofCase.LeftRoom;
      }
    }

    private object notification_;
    /// <summary>Enum of possible cases for the "notification" oneof.</summary>
    public enum NotificationOneofCase {
      None = 0,
      JoinRoom = 20,
      UpdateProperty = 21,
      UpdateSysProperty = 22,
      UpdateMasterClient = 23,
      LeftRoom = 24,
    }
    private NotificationOneofCase notificationCase_ = NotificationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationOneofCase NotificationCase {
      get { return notificationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotification() {
      notificationCase_ = NotificationOneofCase.None;
      notification_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitByActor != other.InitByActor) return false;
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      if (ByMaster != other.ByMaster) return false;
      if (!object.Equals(JoinRoom, other.JoinRoom)) return false;
      if (!object.Equals(UpdateProperty, other.UpdateProperty)) return false;
      if (!object.Equals(UpdateSysProperty, other.UpdateSysProperty)) return false;
      if (!object.Equals(UpdateMasterClient, other.UpdateMasterClient)) return false;
      if (!object.Equals(LeftRoom, other.LeftRoom)) return false;
      if (NotificationCase != other.NotificationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitByActor != 0) hash ^= InitByActor.GetHashCode();
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (ByMaster != false) hash ^= ByMaster.GetHashCode();
      if (notificationCase_ == NotificationOneofCase.JoinRoom) hash ^= JoinRoom.GetHashCode();
      if (notificationCase_ == NotificationOneofCase.UpdateProperty) hash ^= UpdateProperty.GetHashCode();
      if (notificationCase_ == NotificationOneofCase.UpdateSysProperty) hash ^= UpdateSysProperty.GetHashCode();
      if (notificationCase_ == NotificationOneofCase.UpdateMasterClient) hash ^= UpdateMasterClient.GetHashCode();
      if (notificationCase_ == NotificationOneofCase.LeftRoom) hash ^= LeftRoom.GetHashCode();
      hash ^= (int) notificationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitByActor != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InitByActor);
      }
      if (appInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AppInfo);
      }
      if (ByMaster != false) {
        output.WriteRawTag(32);
        output.WriteBool(ByMaster);
      }
      if (notificationCase_ == NotificationOneofCase.JoinRoom) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(JoinRoom);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateProperty) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UpdateProperty);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateSysProperty) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(UpdateSysProperty);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateMasterClient) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(UpdateMasterClient);
      }
      if (notificationCase_ == NotificationOneofCase.LeftRoom) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(LeftRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitByActor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitByActor);
      }
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (ByMaster != false) {
        size += 1 + 1;
      }
      if (notificationCase_ == NotificationOneofCase.JoinRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoom);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateProperty);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateSysProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSysProperty);
      }
      if (notificationCase_ == NotificationOneofCase.UpdateMasterClient) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateMasterClient);
      }
      if (notificationCase_ == NotificationOneofCase.LeftRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LeftRoom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomNotification other) {
      if (other == null) {
        return;
      }
      if (other.InitByActor != 0) {
        InitByActor = other.InitByActor;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      if (other.ByMaster != false) {
        ByMaster = other.ByMaster;
      }
      switch (other.NotificationCase) {
        case NotificationOneofCase.JoinRoom:
          if (JoinRoom == null) {
            JoinRoom = new global::LeanCloud.Play.Protocol.JoinRoomNotification();
          }
          JoinRoom.MergeFrom(other.JoinRoom);
          break;
        case NotificationOneofCase.UpdateProperty:
          if (UpdateProperty == null) {
            UpdateProperty = new global::LeanCloud.Play.Protocol.UpdatePropertyNotification();
          }
          UpdateProperty.MergeFrom(other.UpdateProperty);
          break;
        case NotificationOneofCase.UpdateSysProperty:
          if (UpdateSysProperty == null) {
            UpdateSysProperty = new global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification();
          }
          UpdateSysProperty.MergeFrom(other.UpdateSysProperty);
          break;
        case NotificationOneofCase.UpdateMasterClient:
          if (UpdateMasterClient == null) {
            UpdateMasterClient = new global::LeanCloud.Play.Protocol.UpdateMasterClientNotification();
          }
          UpdateMasterClient.MergeFrom(other.UpdateMasterClient);
          break;
        case NotificationOneofCase.LeftRoom:
          if (LeftRoom == null) {
            LeftRoom = new global::LeanCloud.Play.Protocol.LeftRoomNotification();
          }
          LeftRoom.MergeFrom(other.LeftRoom);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitByActor = input.ReadInt32();
            break;
          }
          case 26: {
            if (appInfo_ == null) {
              AppInfo = new global::LeanCloud.Play.Protocol.AppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 32: {
            ByMaster = input.ReadBool();
            break;
          }
          case 162: {
            global::LeanCloud.Play.Protocol.JoinRoomNotification subBuilder = new global::LeanCloud.Play.Protocol.JoinRoomNotification();
            if (notificationCase_ == NotificationOneofCase.JoinRoom) {
              subBuilder.MergeFrom(JoinRoom);
            }
            input.ReadMessage(subBuilder);
            JoinRoom = subBuilder;
            break;
          }
          case 170: {
            global::LeanCloud.Play.Protocol.UpdatePropertyNotification subBuilder = new global::LeanCloud.Play.Protocol.UpdatePropertyNotification();
            if (notificationCase_ == NotificationOneofCase.UpdateProperty) {
              subBuilder.MergeFrom(UpdateProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateProperty = subBuilder;
            break;
          }
          case 178: {
            global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification subBuilder = new global::LeanCloud.Play.Protocol.UpdateSysPropertyNotification();
            if (notificationCase_ == NotificationOneofCase.UpdateSysProperty) {
              subBuilder.MergeFrom(UpdateSysProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateSysProperty = subBuilder;
            break;
          }
          case 186: {
            global::LeanCloud.Play.Protocol.UpdateMasterClientNotification subBuilder = new global::LeanCloud.Play.Protocol.UpdateMasterClientNotification();
            if (notificationCase_ == NotificationOneofCase.UpdateMasterClient) {
              subBuilder.MergeFrom(UpdateMasterClient);
            }
            input.ReadMessage(subBuilder);
            UpdateMasterClient = subBuilder;
            break;
          }
          case 194: {
            global::LeanCloud.Play.Protocol.LeftRoomNotification subBuilder = new global::LeanCloud.Play.Protocol.LeftRoomNotification();
            if (notificationCase_ == NotificationOneofCase.LeftRoom) {
              subBuilder.MergeFrom(LeftRoom);
            }
            input.ReadMessage(subBuilder);
            LeftRoom = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class DirectCommand : pb::IMessage<DirectCommand> {
    private static readonly pb::MessageParser<DirectCommand> _parser = new pb::MessageParser<DirectCommand>(() => new DirectCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirectCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectCommand(DirectCommand other) : this() {
      cached_ = other.cached_;
      eventId_ = other.eventId_;
      receiverGroup_ = other.receiverGroup_;
      cachingOption_ = other.cachingOption_;
      eventOptions_ = other.eventOptions_;
      toActorIds_ = other.toActorIds_.Clone();
      msg_ = other.msg_;
      timestamp_ = other.timestamp_;
      fromActorId_ = other.fromActorId_;
      i_ = other.i_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectCommand Clone() {
      return new DirectCommand(this);
    }

    /// <summary>Field number for the "cached" field.</summary>
    public const int CachedFieldNumber = 1;
    private bool cached_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cached {
      get { return cached_; }
      set {
        cached_ = value;
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private int eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "receiver_group" field.</summary>
    public const int ReceiverGroupFieldNumber = 3;
    private int receiverGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverGroup {
      get { return receiverGroup_; }
      set {
        receiverGroup_ = value;
      }
    }

    /// <summary>Field number for the "caching_option" field.</summary>
    public const int CachingOptionFieldNumber = 4;
    private int cachingOption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CachingOption {
      get { return cachingOption_; }
      set {
        cachingOption_ = value;
      }
    }

    /// <summary>Field number for the "event_options" field.</summary>
    public const int EventOptionsFieldNumber = 5;
    private int eventOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventOptions {
      get { return eventOptions_; }
      set {
        eventOptions_ = value;
      }
    }

    /// <summary>Field number for the "to_actor_ids" field.</summary>
    public const int ToActorIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_toActorIds_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> toActorIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ToActorIds {
      get { return toActorIds_; }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 7;
    private pb::ByteString msg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "from_actor_id" field.</summary>
    public const int FromActorIdFieldNumber = 9;
    private int fromActorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FromActorId {
      get { return fromActorId_; }
      set {
        fromActorId_ = value;
      }
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 10;
    private int i_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirectCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirectCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cached != other.Cached) return false;
      if (EventId != other.EventId) return false;
      if (ReceiverGroup != other.ReceiverGroup) return false;
      if (CachingOption != other.CachingOption) return false;
      if (EventOptions != other.EventOptions) return false;
      if(!toActorIds_.Equals(other.toActorIds_)) return false;
      if (Msg != other.Msg) return false;
      if (Timestamp != other.Timestamp) return false;
      if (FromActorId != other.FromActorId) return false;
      if (I != other.I) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cached != false) hash ^= Cached.GetHashCode();
      if (EventId != 0) hash ^= EventId.GetHashCode();
      if (ReceiverGroup != 0) hash ^= ReceiverGroup.GetHashCode();
      if (CachingOption != 0) hash ^= CachingOption.GetHashCode();
      if (EventOptions != 0) hash ^= EventOptions.GetHashCode();
      hash ^= toActorIds_.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (FromActorId != 0) hash ^= FromActorId.GetHashCode();
      if (I != 0) hash ^= I.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cached != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cached);
      }
      if (EventId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventId);
      }
      if (ReceiverGroup != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReceiverGroup);
      }
      if (CachingOption != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CachingOption);
      }
      if (EventOptions != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EventOptions);
      }
      toActorIds_.WriteTo(output, _repeated_toActorIds_codec);
      if (Msg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Msg);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Timestamp);
      }
      if (FromActorId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FromActorId);
      }
      if (I != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(I);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cached != false) {
        size += 1 + 1;
      }
      if (EventId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
      }
      if (ReceiverGroup != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverGroup);
      }
      if (CachingOption != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CachingOption);
      }
      if (EventOptions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventOptions);
      }
      size += toActorIds_.CalculateSize(_repeated_toActorIds_codec);
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Msg);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (FromActorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromActorId);
      }
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirectCommand other) {
      if (other == null) {
        return;
      }
      if (other.Cached != false) {
        Cached = other.Cached;
      }
      if (other.EventId != 0) {
        EventId = other.EventId;
      }
      if (other.ReceiverGroup != 0) {
        ReceiverGroup = other.ReceiverGroup;
      }
      if (other.CachingOption != 0) {
        CachingOption = other.CachingOption;
      }
      if (other.EventOptions != 0) {
        EventOptions = other.EventOptions;
      }
      toActorIds_.Add(other.toActorIds_);
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.FromActorId != 0) {
        FromActorId = other.FromActorId;
      }
      if (other.I != 0) {
        I = other.I;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cached = input.ReadBool();
            break;
          }
          case 16: {
            EventId = input.ReadInt32();
            break;
          }
          case 24: {
            ReceiverGroup = input.ReadInt32();
            break;
          }
          case 32: {
            CachingOption = input.ReadInt32();
            break;
          }
          case 40: {
            EventOptions = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            toActorIds_.AddEntriesFrom(input, _repeated_toActorIds_codec);
            break;
          }
          case 58: {
            Msg = input.ReadBytes();
            break;
          }
          case 64: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 72: {
            FromActorId = input.ReadInt32();
            break;
          }
          case 80: {
            I = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AckCommand : pb::IMessage<AckCommand> {
    private static readonly pb::MessageParser<AckCommand> _parser = new pb::MessageParser<AckCommand>(() => new AckCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckCommand(AckCommand other) : this() {
      timestamp_ = other.timestamp_;
      i_ = other.i_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckCommand Clone() {
      return new AckCommand(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 11;
    private int i_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (I != other.I) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (I != 0) hash ^= I.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (I != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(I);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckCommand other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.I != 0) {
        I = other.I;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 88: {
            I = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventsCommand : pb::IMessage<EventsCommand> {
    private static readonly pb::MessageParser<EventsCommand> _parser = new pb::MessageParser<EventsCommand>(() => new EventsCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventsCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommand(EventsCommand other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommand Clone() {
      return new EventsCommand(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LeanCloud.Play.Protocol.DirectCommand> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::LeanCloud.Play.Protocol.DirectCommand.Parser);
    private readonly pbc::RepeatedField<global::LeanCloud.Play.Protocol.DirectCommand> events_ = new pbc::RepeatedField<global::LeanCloud.Play.Protocol.DirectCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LeanCloud.Play.Protocol.DirectCommand> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventsCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventsCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventsCommand other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinLobbyRequest : pb::IMessage<JoinLobbyRequest> {
    private static readonly pb::MessageParser<JoinLobbyRequest> _parser = new pb::MessageParser<JoinLobbyRequest>(() => new JoinLobbyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinLobbyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest(JoinLobbyRequest other) : this() {
      lobbyId_ = other.lobbyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest Clone() {
      return new JoinLobbyRequest(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinLobbyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinLobbyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinLobbyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomListCommand : pb::IMessage<RoomListCommand> {
    private static readonly pb::MessageParser<RoomListCommand> _parser = new pb::MessageParser<RoomListCommand>(() => new RoomListCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListCommand(RoomListCommand other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListCommand Clone() {
      return new RoomListCommand(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LeanCloud.Play.Protocol.RoomOptions> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::LeanCloud.Play.Protocol.RoomOptions.Parser);
    private readonly pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomOptions> list_ = new pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomOptions>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LeanCloud.Play.Protocol.RoomOptions> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListCommand other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppStatistic : pb::IMessage<AppStatistic> {
    private static readonly pb::MessageParser<AppStatistic> _parser = new pb::MessageParser<AppStatistic>(() => new AppStatistic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatistic(AppStatistic other) : this() {
      countOfRooms_ = other.countOfRooms_;
      countOfPlayersOnRouter_ = other.countOfPlayersOnRouter_;
      countOfPlayersInRooms_ = other.countOfPlayersInRooms_;
      countOfPlayers_ = other.countOfPlayers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppStatistic Clone() {
      return new AppStatistic(this);
    }

    /// <summary>Field number for the "count_of_rooms" field.</summary>
    public const int CountOfRoomsFieldNumber = 1;
    private int countOfRooms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountOfRooms {
      get { return countOfRooms_; }
      set {
        countOfRooms_ = value;
      }
    }

    /// <summary>Field number for the "count_of_players_on_router" field.</summary>
    public const int CountOfPlayersOnRouterFieldNumber = 2;
    private int countOfPlayersOnRouter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountOfPlayersOnRouter {
      get { return countOfPlayersOnRouter_; }
      set {
        countOfPlayersOnRouter_ = value;
      }
    }

    /// <summary>Field number for the "count_of_players_in_rooms" field.</summary>
    public const int CountOfPlayersInRoomsFieldNumber = 3;
    private int countOfPlayersInRooms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountOfPlayersInRooms {
      get { return countOfPlayersInRooms_; }
      set {
        countOfPlayersInRooms_ = value;
      }
    }

    /// <summary>Field number for the "count_of_players" field.</summary>
    public const int CountOfPlayersFieldNumber = 4;
    private int countOfPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountOfPlayers {
      get { return countOfPlayers_; }
      set {
        countOfPlayers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CountOfRooms != other.CountOfRooms) return false;
      if (CountOfPlayersOnRouter != other.CountOfPlayersOnRouter) return false;
      if (CountOfPlayersInRooms != other.CountOfPlayersInRooms) return false;
      if (CountOfPlayers != other.CountOfPlayers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CountOfRooms != 0) hash ^= CountOfRooms.GetHashCode();
      if (CountOfPlayersOnRouter != 0) hash ^= CountOfPlayersOnRouter.GetHashCode();
      if (CountOfPlayersInRooms != 0) hash ^= CountOfPlayersInRooms.GetHashCode();
      if (CountOfPlayers != 0) hash ^= CountOfPlayers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CountOfRooms != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CountOfRooms);
      }
      if (CountOfPlayersOnRouter != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CountOfPlayersOnRouter);
      }
      if (CountOfPlayersInRooms != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountOfPlayersInRooms);
      }
      if (CountOfPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountOfPlayers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CountOfRooms != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountOfRooms);
      }
      if (CountOfPlayersOnRouter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountOfPlayersOnRouter);
      }
      if (CountOfPlayersInRooms != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountOfPlayersInRooms);
      }
      if (CountOfPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountOfPlayers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppStatistic other) {
      if (other == null) {
        return;
      }
      if (other.CountOfRooms != 0) {
        CountOfRooms = other.CountOfRooms;
      }
      if (other.CountOfPlayersOnRouter != 0) {
        CountOfPlayersOnRouter = other.CountOfPlayersOnRouter;
      }
      if (other.CountOfPlayersInRooms != 0) {
        CountOfPlayersInRooms = other.CountOfPlayersInRooms;
      }
      if (other.CountOfPlayers != 0) {
        CountOfPlayers = other.CountOfPlayers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CountOfRooms = input.ReadInt32();
            break;
          }
          case 16: {
            CountOfPlayersOnRouter = input.ReadInt32();
            break;
          }
          case 24: {
            CountOfPlayersInRooms = input.ReadInt32();
            break;
          }
          case 32: {
            CountOfPlayers = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatisticCommand : pb::IMessage<StatisticCommand> {
    private static readonly pb::MessageParser<StatisticCommand> _parser = new pb::MessageParser<StatisticCommand>(() => new StatisticCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatisticCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticCommand(StatisticCommand other) : this() {
      appStats_ = other.appStats_ != null ? other.appStats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticCommand Clone() {
      return new StatisticCommand(this);
    }

    /// <summary>Field number for the "app_stats" field.</summary>
    public const int AppStatsFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.AppStatistic appStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.AppStatistic AppStats {
      get { return appStats_; }
      set {
        appStats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatisticCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatisticCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppStats, other.AppStats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appStats_ != null) hash ^= AppStats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appStats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatisticCommand other) {
      if (other == null) {
        return;
      }
      if (other.appStats_ != null) {
        if (appStats_ == null) {
          AppStats = new global::LeanCloud.Play.Protocol.AppStatistic();
        }
        AppStats.MergeFrom(other.AppStats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appStats_ == null) {
              AppStats = new global::LeanCloud.Play.Protocol.AppStatistic();
            }
            input.ReadMessage(AppStats);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorCommand : pb::IMessage<ErrorCommand> {
    private static readonly pb::MessageParser<ErrorCommand> _parser = new pb::MessageParser<ErrorCommand>(() => new ErrorCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorCommand(ErrorCommand other) : this() {
      errorInfo_ = other.errorInfo_ != null ? other.errorInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorCommand Clone() {
      return new ErrorCommand(this);
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.ErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.ErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (errorInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorCommand other) {
      if (other == null) {
        return;
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          ErrorInfo = new global::LeanCloud.Play.Protocol.ErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errorInfo_ == null) {
              ErrorInfo = new global::LeanCloud.Play.Protocol.ErrorInfo();
            }
            input.ReadMessage(ErrorInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestMessage : pb::IMessage<RequestMessage> {
    private static readonly pb::MessageParser<RequestMessage> _parser = new pb::MessageParser<RequestMessage>(() => new RequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMessage(RequestMessage other) : this() {
      i_ = other.i_;
      switch (other.RequestCase) {
        case RequestOneofCase.SessionOpen:
          SessionOpen = other.SessionOpen.Clone();
          break;
        case RequestOneofCase.CreateRoom:
          CreateRoom = other.CreateRoom.Clone();
          break;
        case RequestOneofCase.JoinRoom:
          JoinRoom = other.JoinRoom.Clone();
          break;
        case RequestOneofCase.UpdateProperty:
          UpdateProperty = other.UpdateProperty.Clone();
          break;
        case RequestOneofCase.UpdateSysProperty:
          UpdateSysProperty = other.UpdateSysProperty.Clone();
          break;
        case RequestOneofCase.UpdateMasterClient:
          UpdateMasterClient = other.UpdateMasterClient.Clone();
          break;
        case RequestOneofCase.KickMember:
          KickMember = other.KickMember.Clone();
          break;
        case RequestOneofCase.JoinLobby:
          JoinLobby = other.JoinLobby.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMessage Clone() {
      return new RequestMessage(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private int i_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "session_open" field.</summary>
    public const int SessionOpenFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.SessionOpenRequest SessionOpen {
      get { return requestCase_ == RequestOneofCase.SessionOpen ? (global::LeanCloud.Play.Protocol.SessionOpenRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SessionOpen;
      }
    }

    /// <summary>Field number for the "create_room" field.</summary>
    public const int CreateRoomFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.CreateRoomRequest CreateRoom {
      get { return requestCase_ == RequestOneofCase.CreateRoom ? (global::LeanCloud.Play.Protocol.CreateRoomRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreateRoom;
      }
    }

    /// <summary>Field number for the "join_room" field.</summary>
    public const int JoinRoomFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.JoinRoomRequest JoinRoom {
      get { return requestCase_ == RequestOneofCase.JoinRoom ? (global::LeanCloud.Play.Protocol.JoinRoomRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.JoinRoom;
      }
    }

    /// <summary>Field number for the "update_property" field.</summary>
    public const int UpdatePropertyFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdatePropertyRequest UpdateProperty {
      get { return requestCase_ == RequestOneofCase.UpdateProperty ? (global::LeanCloud.Play.Protocol.UpdatePropertyRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.UpdateProperty;
      }
    }

    /// <summary>Field number for the "update_sys_property" field.</summary>
    public const int UpdateSysPropertyFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest UpdateSysProperty {
      get { return requestCase_ == RequestOneofCase.UpdateSysProperty ? (global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.UpdateSysProperty;
      }
    }

    /// <summary>Field number for the "update_master_client" field.</summary>
    public const int UpdateMasterClientFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateMasterClientRequest UpdateMasterClient {
      get { return requestCase_ == RequestOneofCase.UpdateMasterClient ? (global::LeanCloud.Play.Protocol.UpdateMasterClientRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.UpdateMasterClient;
      }
    }

    /// <summary>Field number for the "kick_member" field.</summary>
    public const int KickMemberFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.KickMemberRequest KickMember {
      get { return requestCase_ == RequestOneofCase.KickMember ? (global::LeanCloud.Play.Protocol.KickMemberRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.KickMember;
      }
    }

    /// <summary>Field number for the "join_lobby" field.</summary>
    public const int JoinLobbyFieldNumber = 54;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.JoinLobbyRequest JoinLobby {
      get { return requestCase_ == RequestOneofCase.JoinLobby ? (global::LeanCloud.Play.Protocol.JoinLobbyRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.JoinLobby;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      SessionOpen = 20,
      CreateRoom = 21,
      JoinRoom = 22,
      UpdateProperty = 23,
      UpdateSysProperty = 24,
      UpdateMasterClient = 25,
      KickMember = 26,
      JoinLobby = 54,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (!object.Equals(SessionOpen, other.SessionOpen)) return false;
      if (!object.Equals(CreateRoom, other.CreateRoom)) return false;
      if (!object.Equals(JoinRoom, other.JoinRoom)) return false;
      if (!object.Equals(UpdateProperty, other.UpdateProperty)) return false;
      if (!object.Equals(UpdateSysProperty, other.UpdateSysProperty)) return false;
      if (!object.Equals(UpdateMasterClient, other.UpdateMasterClient)) return false;
      if (!object.Equals(KickMember, other.KickMember)) return false;
      if (!object.Equals(JoinLobby, other.JoinLobby)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (requestCase_ == RequestOneofCase.SessionOpen) hash ^= SessionOpen.GetHashCode();
      if (requestCase_ == RequestOneofCase.CreateRoom) hash ^= CreateRoom.GetHashCode();
      if (requestCase_ == RequestOneofCase.JoinRoom) hash ^= JoinRoom.GetHashCode();
      if (requestCase_ == RequestOneofCase.UpdateProperty) hash ^= UpdateProperty.GetHashCode();
      if (requestCase_ == RequestOneofCase.UpdateSysProperty) hash ^= UpdateSysProperty.GetHashCode();
      if (requestCase_ == RequestOneofCase.UpdateMasterClient) hash ^= UpdateMasterClient.GetHashCode();
      if (requestCase_ == RequestOneofCase.KickMember) hash ^= KickMember.GetHashCode();
      if (requestCase_ == RequestOneofCase.JoinLobby) hash ^= JoinLobby.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(I);
      }
      if (requestCase_ == RequestOneofCase.SessionOpen) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(SessionOpen);
      }
      if (requestCase_ == RequestOneofCase.CreateRoom) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(CreateRoom);
      }
      if (requestCase_ == RequestOneofCase.JoinRoom) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(JoinRoom);
      }
      if (requestCase_ == RequestOneofCase.UpdateProperty) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(UpdateProperty);
      }
      if (requestCase_ == RequestOneofCase.UpdateSysProperty) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(UpdateSysProperty);
      }
      if (requestCase_ == RequestOneofCase.UpdateMasterClient) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(UpdateMasterClient);
      }
      if (requestCase_ == RequestOneofCase.KickMember) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(KickMember);
      }
      if (requestCase_ == RequestOneofCase.JoinLobby) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(JoinLobby);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (requestCase_ == RequestOneofCase.SessionOpen) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SessionOpen);
      }
      if (requestCase_ == RequestOneofCase.CreateRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateRoom);
      }
      if (requestCase_ == RequestOneofCase.JoinRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoom);
      }
      if (requestCase_ == RequestOneofCase.UpdateProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateProperty);
      }
      if (requestCase_ == RequestOneofCase.UpdateSysProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSysProperty);
      }
      if (requestCase_ == RequestOneofCase.UpdateMasterClient) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateMasterClient);
      }
      if (requestCase_ == RequestOneofCase.KickMember) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(KickMember);
      }
      if (requestCase_ == RequestOneofCase.JoinLobby) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinLobby);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.SessionOpen:
          if (SessionOpen == null) {
            SessionOpen = new global::LeanCloud.Play.Protocol.SessionOpenRequest();
          }
          SessionOpen.MergeFrom(other.SessionOpen);
          break;
        case RequestOneofCase.CreateRoom:
          if (CreateRoom == null) {
            CreateRoom = new global::LeanCloud.Play.Protocol.CreateRoomRequest();
          }
          CreateRoom.MergeFrom(other.CreateRoom);
          break;
        case RequestOneofCase.JoinRoom:
          if (JoinRoom == null) {
            JoinRoom = new global::LeanCloud.Play.Protocol.JoinRoomRequest();
          }
          JoinRoom.MergeFrom(other.JoinRoom);
          break;
        case RequestOneofCase.UpdateProperty:
          if (UpdateProperty == null) {
            UpdateProperty = new global::LeanCloud.Play.Protocol.UpdatePropertyRequest();
          }
          UpdateProperty.MergeFrom(other.UpdateProperty);
          break;
        case RequestOneofCase.UpdateSysProperty:
          if (UpdateSysProperty == null) {
            UpdateSysProperty = new global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest();
          }
          UpdateSysProperty.MergeFrom(other.UpdateSysProperty);
          break;
        case RequestOneofCase.UpdateMasterClient:
          if (UpdateMasterClient == null) {
            UpdateMasterClient = new global::LeanCloud.Play.Protocol.UpdateMasterClientRequest();
          }
          UpdateMasterClient.MergeFrom(other.UpdateMasterClient);
          break;
        case RequestOneofCase.KickMember:
          if (KickMember == null) {
            KickMember = new global::LeanCloud.Play.Protocol.KickMemberRequest();
          }
          KickMember.MergeFrom(other.KickMember);
          break;
        case RequestOneofCase.JoinLobby:
          if (JoinLobby == null) {
            JoinLobby = new global::LeanCloud.Play.Protocol.JoinLobbyRequest();
          }
          JoinLobby.MergeFrom(other.JoinLobby);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadInt32();
            break;
          }
          case 162: {
            global::LeanCloud.Play.Protocol.SessionOpenRequest subBuilder = new global::LeanCloud.Play.Protocol.SessionOpenRequest();
            if (requestCase_ == RequestOneofCase.SessionOpen) {
              subBuilder.MergeFrom(SessionOpen);
            }
            input.ReadMessage(subBuilder);
            SessionOpen = subBuilder;
            break;
          }
          case 170: {
            global::LeanCloud.Play.Protocol.CreateRoomRequest subBuilder = new global::LeanCloud.Play.Protocol.CreateRoomRequest();
            if (requestCase_ == RequestOneofCase.CreateRoom) {
              subBuilder.MergeFrom(CreateRoom);
            }
            input.ReadMessage(subBuilder);
            CreateRoom = subBuilder;
            break;
          }
          case 178: {
            global::LeanCloud.Play.Protocol.JoinRoomRequest subBuilder = new global::LeanCloud.Play.Protocol.JoinRoomRequest();
            if (requestCase_ == RequestOneofCase.JoinRoom) {
              subBuilder.MergeFrom(JoinRoom);
            }
            input.ReadMessage(subBuilder);
            JoinRoom = subBuilder;
            break;
          }
          case 186: {
            global::LeanCloud.Play.Protocol.UpdatePropertyRequest subBuilder = new global::LeanCloud.Play.Protocol.UpdatePropertyRequest();
            if (requestCase_ == RequestOneofCase.UpdateProperty) {
              subBuilder.MergeFrom(UpdateProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateProperty = subBuilder;
            break;
          }
          case 194: {
            global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest subBuilder = new global::LeanCloud.Play.Protocol.UpdateSysPropertyRequest();
            if (requestCase_ == RequestOneofCase.UpdateSysProperty) {
              subBuilder.MergeFrom(UpdateSysProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateSysProperty = subBuilder;
            break;
          }
          case 202: {
            global::LeanCloud.Play.Protocol.UpdateMasterClientRequest subBuilder = new global::LeanCloud.Play.Protocol.UpdateMasterClientRequest();
            if (requestCase_ == RequestOneofCase.UpdateMasterClient) {
              subBuilder.MergeFrom(UpdateMasterClient);
            }
            input.ReadMessage(subBuilder);
            UpdateMasterClient = subBuilder;
            break;
          }
          case 210: {
            global::LeanCloud.Play.Protocol.KickMemberRequest subBuilder = new global::LeanCloud.Play.Protocol.KickMemberRequest();
            if (requestCase_ == RequestOneofCase.KickMember) {
              subBuilder.MergeFrom(KickMember);
            }
            input.ReadMessage(subBuilder);
            KickMember = subBuilder;
            break;
          }
          case 434: {
            global::LeanCloud.Play.Protocol.JoinLobbyRequest subBuilder = new global::LeanCloud.Play.Protocol.JoinLobbyRequest();
            if (requestCase_ == RequestOneofCase.JoinLobby) {
              subBuilder.MergeFrom(JoinLobby);
            }
            input.ReadMessage(subBuilder);
            JoinLobby = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseMessage : pb::IMessage<ResponseMessage> {
    private static readonly pb::MessageParser<ResponseMessage> _parser = new pb::MessageParser<ResponseMessage>(() => new ResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage(ResponseMessage other) : this() {
      i_ = other.i_;
      errorInfo_ = other.errorInfo_ != null ? other.errorInfo_.Clone() : null;
      switch (other.ResponseCase) {
        case ResponseOneofCase.CreateRoom:
          CreateRoom = other.CreateRoom.Clone();
          break;
        case ResponseOneofCase.JoinRoom:
          JoinRoom = other.JoinRoom.Clone();
          break;
        case ResponseOneofCase.UpdateProperty:
          UpdateProperty = other.UpdateProperty.Clone();
          break;
        case ResponseOneofCase.UpdateSysProperty:
          UpdateSysProperty = other.UpdateSysProperty.Clone();
          break;
        case ResponseOneofCase.UpdateMasterClient:
          UpdateMasterClient = other.UpdateMasterClient.Clone();
          break;
        case ResponseOneofCase.KickMember:
          KickMember = other.KickMember.Clone();
          break;
        case ResponseOneofCase.Ack:
          Ack = other.Ack.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage Clone() {
      return new ResponseMessage(this);
    }

    /// <summary>Field number for the "i" field.</summary>
    public const int IFieldNumber = 1;
    private int i_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I {
      get { return i_; }
      set {
        i_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::LeanCloud.Play.Protocol.ErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.ErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    /// <summary>Field number for the "create_room" field.</summary>
    public const int CreateRoomFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.CreateRoomResponse CreateRoom {
      get { return responseCase_ == ResponseOneofCase.CreateRoom ? (global::LeanCloud.Play.Protocol.CreateRoomResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.CreateRoom;
      }
    }

    /// <summary>Field number for the "join_room" field.</summary>
    public const int JoinRoomFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.JoinRoomResponse JoinRoom {
      get { return responseCase_ == ResponseOneofCase.JoinRoom ? (global::LeanCloud.Play.Protocol.JoinRoomResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.JoinRoom;
      }
    }

    /// <summary>Field number for the "update_property" field.</summary>
    public const int UpdatePropertyFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdatePropertyResponse UpdateProperty {
      get { return responseCase_ == ResponseOneofCase.UpdateProperty ? (global::LeanCloud.Play.Protocol.UpdatePropertyResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.UpdateProperty;
      }
    }

    /// <summary>Field number for the "update_sys_property" field.</summary>
    public const int UpdateSysPropertyFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse UpdateSysProperty {
      get { return responseCase_ == ResponseOneofCase.UpdateSysProperty ? (global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.UpdateSysProperty;
      }
    }

    /// <summary>Field number for the "update_master_client" field.</summary>
    public const int UpdateMasterClientFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.UpdateMasterClientResponse UpdateMasterClient {
      get { return responseCase_ == ResponseOneofCase.UpdateMasterClient ? (global::LeanCloud.Play.Protocol.UpdateMasterClientResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.UpdateMasterClient;
      }
    }

    /// <summary>Field number for the "kick_member" field.</summary>
    public const int KickMemberFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.KickMemberResponse KickMember {
      get { return responseCase_ == ResponseOneofCase.KickMember ? (global::LeanCloud.Play.Protocol.KickMemberResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.KickMember;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.AckCommand Ack {
      get { return responseCase_ == ResponseOneofCase.Ack ? (global::LeanCloud.Play.Protocol.AckCommand) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Ack;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      CreateRoom = 20,
      JoinRoom = 21,
      UpdateProperty = 22,
      UpdateSysProperty = 23,
      UpdateMasterClient = 24,
      KickMember = 25,
      Ack = 26,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I != other.I) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      if (!object.Equals(CreateRoom, other.CreateRoom)) return false;
      if (!object.Equals(JoinRoom, other.JoinRoom)) return false;
      if (!object.Equals(UpdateProperty, other.UpdateProperty)) return false;
      if (!object.Equals(UpdateSysProperty, other.UpdateSysProperty)) return false;
      if (!object.Equals(UpdateMasterClient, other.UpdateMasterClient)) return false;
      if (!object.Equals(KickMember, other.KickMember)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I != 0) hash ^= I.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (responseCase_ == ResponseOneofCase.CreateRoom) hash ^= CreateRoom.GetHashCode();
      if (responseCase_ == ResponseOneofCase.JoinRoom) hash ^= JoinRoom.GetHashCode();
      if (responseCase_ == ResponseOneofCase.UpdateProperty) hash ^= UpdateProperty.GetHashCode();
      if (responseCase_ == ResponseOneofCase.UpdateSysProperty) hash ^= UpdateSysProperty.GetHashCode();
      if (responseCase_ == ResponseOneofCase.UpdateMasterClient) hash ^= UpdateMasterClient.GetHashCode();
      if (responseCase_ == ResponseOneofCase.KickMember) hash ^= KickMember.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Ack) hash ^= Ack.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(I);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (responseCase_ == ResponseOneofCase.CreateRoom) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CreateRoom);
      }
      if (responseCase_ == ResponseOneofCase.JoinRoom) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(JoinRoom);
      }
      if (responseCase_ == ResponseOneofCase.UpdateProperty) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(UpdateProperty);
      }
      if (responseCase_ == ResponseOneofCase.UpdateSysProperty) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(UpdateSysProperty);
      }
      if (responseCase_ == ResponseOneofCase.UpdateMasterClient) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(UpdateMasterClient);
      }
      if (responseCase_ == ResponseOneofCase.KickMember) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(KickMember);
      }
      if (responseCase_ == ResponseOneofCase.Ack) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Ack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (responseCase_ == ResponseOneofCase.CreateRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateRoom);
      }
      if (responseCase_ == ResponseOneofCase.JoinRoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoom);
      }
      if (responseCase_ == ResponseOneofCase.UpdateProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateProperty);
      }
      if (responseCase_ == ResponseOneofCase.UpdateSysProperty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSysProperty);
      }
      if (responseCase_ == ResponseOneofCase.UpdateMasterClient) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateMasterClient);
      }
      if (responseCase_ == ResponseOneofCase.KickMember) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(KickMember);
      }
      if (responseCase_ == ResponseOneofCase.Ack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.I != 0) {
        I = other.I;
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          ErrorInfo = new global::LeanCloud.Play.Protocol.ErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.CreateRoom:
          if (CreateRoom == null) {
            CreateRoom = new global::LeanCloud.Play.Protocol.CreateRoomResponse();
          }
          CreateRoom.MergeFrom(other.CreateRoom);
          break;
        case ResponseOneofCase.JoinRoom:
          if (JoinRoom == null) {
            JoinRoom = new global::LeanCloud.Play.Protocol.JoinRoomResponse();
          }
          JoinRoom.MergeFrom(other.JoinRoom);
          break;
        case ResponseOneofCase.UpdateProperty:
          if (UpdateProperty == null) {
            UpdateProperty = new global::LeanCloud.Play.Protocol.UpdatePropertyResponse();
          }
          UpdateProperty.MergeFrom(other.UpdateProperty);
          break;
        case ResponseOneofCase.UpdateSysProperty:
          if (UpdateSysProperty == null) {
            UpdateSysProperty = new global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse();
          }
          UpdateSysProperty.MergeFrom(other.UpdateSysProperty);
          break;
        case ResponseOneofCase.UpdateMasterClient:
          if (UpdateMasterClient == null) {
            UpdateMasterClient = new global::LeanCloud.Play.Protocol.UpdateMasterClientResponse();
          }
          UpdateMasterClient.MergeFrom(other.UpdateMasterClient);
          break;
        case ResponseOneofCase.KickMember:
          if (KickMember == null) {
            KickMember = new global::LeanCloud.Play.Protocol.KickMemberResponse();
          }
          KickMember.MergeFrom(other.KickMember);
          break;
        case ResponseOneofCase.Ack:
          if (Ack == null) {
            Ack = new global::LeanCloud.Play.Protocol.AckCommand();
          }
          Ack.MergeFrom(other.Ack);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            I = input.ReadInt32();
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              ErrorInfo = new global::LeanCloud.Play.Protocol.ErrorInfo();
            }
            input.ReadMessage(ErrorInfo);
            break;
          }
          case 162: {
            global::LeanCloud.Play.Protocol.CreateRoomResponse subBuilder = new global::LeanCloud.Play.Protocol.CreateRoomResponse();
            if (responseCase_ == ResponseOneofCase.CreateRoom) {
              subBuilder.MergeFrom(CreateRoom);
            }
            input.ReadMessage(subBuilder);
            CreateRoom = subBuilder;
            break;
          }
          case 170: {
            global::LeanCloud.Play.Protocol.JoinRoomResponse subBuilder = new global::LeanCloud.Play.Protocol.JoinRoomResponse();
            if (responseCase_ == ResponseOneofCase.JoinRoom) {
              subBuilder.MergeFrom(JoinRoom);
            }
            input.ReadMessage(subBuilder);
            JoinRoom = subBuilder;
            break;
          }
          case 178: {
            global::LeanCloud.Play.Protocol.UpdatePropertyResponse subBuilder = new global::LeanCloud.Play.Protocol.UpdatePropertyResponse();
            if (responseCase_ == ResponseOneofCase.UpdateProperty) {
              subBuilder.MergeFrom(UpdateProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateProperty = subBuilder;
            break;
          }
          case 186: {
            global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse subBuilder = new global::LeanCloud.Play.Protocol.UpdateSysPropertyResponse();
            if (responseCase_ == ResponseOneofCase.UpdateSysProperty) {
              subBuilder.MergeFrom(UpdateSysProperty);
            }
            input.ReadMessage(subBuilder);
            UpdateSysProperty = subBuilder;
            break;
          }
          case 194: {
            global::LeanCloud.Play.Protocol.UpdateMasterClientResponse subBuilder = new global::LeanCloud.Play.Protocol.UpdateMasterClientResponse();
            if (responseCase_ == ResponseOneofCase.UpdateMasterClient) {
              subBuilder.MergeFrom(UpdateMasterClient);
            }
            input.ReadMessage(subBuilder);
            UpdateMasterClient = subBuilder;
            break;
          }
          case 202: {
            global::LeanCloud.Play.Protocol.KickMemberResponse subBuilder = new global::LeanCloud.Play.Protocol.KickMemberResponse();
            if (responseCase_ == ResponseOneofCase.KickMember) {
              subBuilder.MergeFrom(KickMember);
            }
            input.ReadMessage(subBuilder);
            KickMember = subBuilder;
            break;
          }
          case 210: {
            global::LeanCloud.Play.Protocol.AckCommand subBuilder = new global::LeanCloud.Play.Protocol.AckCommand();
            if (responseCase_ == ResponseOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Body : pb::IMessage<Body> {
    private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Body> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body(Body other) : this() {
      switch (other.BodyCase) {
        case BodyOneofCase.Request:
          Request = other.Request.Clone();
          break;
        case BodyOneofCase.Response:
          Response = other.Response.Clone();
          break;
        case BodyOneofCase.Direct:
          Direct = other.Direct.Clone();
          break;
        case BodyOneofCase.RoomNotification:
          RoomNotification = other.RoomNotification.Clone();
          break;
        case BodyOneofCase.Events:
          Events = other.Events.Clone();
          break;
        case BodyOneofCase.Statistic:
          Statistic = other.Statistic.Clone();
          break;
        case BodyOneofCase.RoomList:
          RoomList = other.RoomList.Clone();
          break;
        case BodyOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body Clone() {
      return new Body(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RequestMessage Request {
      get { return bodyCase_ == BodyOneofCase.Request ? (global::LeanCloud.Play.Protocol.RequestMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Request;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.ResponseMessage Response {
      get { return bodyCase_ == BodyOneofCase.Response ? (global::LeanCloud.Play.Protocol.ResponseMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Response;
      }
    }

    /// <summary>Field number for the "direct" field.</summary>
    public const int DirectFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.DirectCommand Direct {
      get { return bodyCase_ == BodyOneofCase.Direct ? (global::LeanCloud.Play.Protocol.DirectCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Direct;
      }
    }

    /// <summary>Field number for the "room_notification" field.</summary>
    public const int RoomNotificationFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomNotification RoomNotification {
      get { return bodyCase_ == BodyOneofCase.RoomNotification ? (global::LeanCloud.Play.Protocol.RoomNotification) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RoomNotification;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.EventsCommand Events {
      get { return bodyCase_ == BodyOneofCase.Events ? (global::LeanCloud.Play.Protocol.EventsCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Events;
      }
    }

    /// <summary>Field number for the "statistic" field.</summary>
    public const int StatisticFieldNumber = 50;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.StatisticCommand Statistic {
      get { return bodyCase_ == BodyOneofCase.Statistic ? (global::LeanCloud.Play.Protocol.StatisticCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Statistic;
      }
    }

    /// <summary>Field number for the "room_list" field.</summary>
    public const int RoomListFieldNumber = 51;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.RoomListCommand RoomList {
      get { return bodyCase_ == BodyOneofCase.RoomList ? (global::LeanCloud.Play.Protocol.RoomListCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RoomList;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 127;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.ErrorCommand Error {
      get { return bodyCase_ == BodyOneofCase.Error ? (global::LeanCloud.Play.Protocol.ErrorCommand) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Error;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      Request = 1,
      Response = 2,
      Direct = 3,
      RoomNotification = 4,
      Events = 5,
      Statistic = 50,
      RoomList = 51,
      Error = 127,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Body);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Body other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (!object.Equals(Direct, other.Direct)) return false;
      if (!object.Equals(RoomNotification, other.RoomNotification)) return false;
      if (!object.Equals(Events, other.Events)) return false;
      if (!object.Equals(Statistic, other.Statistic)) return false;
      if (!object.Equals(RoomList, other.RoomList)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bodyCase_ == BodyOneofCase.Request) hash ^= Request.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Response) hash ^= Response.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Direct) hash ^= Direct.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RoomNotification) hash ^= RoomNotification.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Events) hash ^= Events.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Statistic) hash ^= Statistic.GetHashCode();
      if (bodyCase_ == BodyOneofCase.RoomList) hash ^= RoomList.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bodyCase_ == BodyOneofCase.Request) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (bodyCase_ == BodyOneofCase.Response) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (bodyCase_ == BodyOneofCase.Direct) {
        output.WriteRawTag(26);
        output.WriteMessage(Direct);
      }
      if (bodyCase_ == BodyOneofCase.RoomNotification) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomNotification);
      }
      if (bodyCase_ == BodyOneofCase.Events) {
        output.WriteRawTag(42);
        output.WriteMessage(Events);
      }
      if (bodyCase_ == BodyOneofCase.Statistic) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(Statistic);
      }
      if (bodyCase_ == BodyOneofCase.RoomList) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(RoomList);
      }
      if (bodyCase_ == BodyOneofCase.Error) {
        output.WriteRawTag(250, 7);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bodyCase_ == BodyOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (bodyCase_ == BodyOneofCase.Response) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (bodyCase_ == BodyOneofCase.Direct) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direct);
      }
      if (bodyCase_ == BodyOneofCase.RoomNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomNotification);
      }
      if (bodyCase_ == BodyOneofCase.Events) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Events);
      }
      if (bodyCase_ == BodyOneofCase.Statistic) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Statistic);
      }
      if (bodyCase_ == BodyOneofCase.RoomList) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomList);
      }
      if (bodyCase_ == BodyOneofCase.Error) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Body other) {
      if (other == null) {
        return;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.Request:
          if (Request == null) {
            Request = new global::LeanCloud.Play.Protocol.RequestMessage();
          }
          Request.MergeFrom(other.Request);
          break;
        case BodyOneofCase.Response:
          if (Response == null) {
            Response = new global::LeanCloud.Play.Protocol.ResponseMessage();
          }
          Response.MergeFrom(other.Response);
          break;
        case BodyOneofCase.Direct:
          if (Direct == null) {
            Direct = new global::LeanCloud.Play.Protocol.DirectCommand();
          }
          Direct.MergeFrom(other.Direct);
          break;
        case BodyOneofCase.RoomNotification:
          if (RoomNotification == null) {
            RoomNotification = new global::LeanCloud.Play.Protocol.RoomNotification();
          }
          RoomNotification.MergeFrom(other.RoomNotification);
          break;
        case BodyOneofCase.Events:
          if (Events == null) {
            Events = new global::LeanCloud.Play.Protocol.EventsCommand();
          }
          Events.MergeFrom(other.Events);
          break;
        case BodyOneofCase.Statistic:
          if (Statistic == null) {
            Statistic = new global::LeanCloud.Play.Protocol.StatisticCommand();
          }
          Statistic.MergeFrom(other.Statistic);
          break;
        case BodyOneofCase.RoomList:
          if (RoomList == null) {
            RoomList = new global::LeanCloud.Play.Protocol.RoomListCommand();
          }
          RoomList.MergeFrom(other.RoomList);
          break;
        case BodyOneofCase.Error:
          if (Error == null) {
            Error = new global::LeanCloud.Play.Protocol.ErrorCommand();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LeanCloud.Play.Protocol.RequestMessage subBuilder = new global::LeanCloud.Play.Protocol.RequestMessage();
            if (bodyCase_ == BodyOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 18: {
            global::LeanCloud.Play.Protocol.ResponseMessage subBuilder = new global::LeanCloud.Play.Protocol.ResponseMessage();
            if (bodyCase_ == BodyOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
          case 26: {
            global::LeanCloud.Play.Protocol.DirectCommand subBuilder = new global::LeanCloud.Play.Protocol.DirectCommand();
            if (bodyCase_ == BodyOneofCase.Direct) {
              subBuilder.MergeFrom(Direct);
            }
            input.ReadMessage(subBuilder);
            Direct = subBuilder;
            break;
          }
          case 34: {
            global::LeanCloud.Play.Protocol.RoomNotification subBuilder = new global::LeanCloud.Play.Protocol.RoomNotification();
            if (bodyCase_ == BodyOneofCase.RoomNotification) {
              subBuilder.MergeFrom(RoomNotification);
            }
            input.ReadMessage(subBuilder);
            RoomNotification = subBuilder;
            break;
          }
          case 42: {
            global::LeanCloud.Play.Protocol.EventsCommand subBuilder = new global::LeanCloud.Play.Protocol.EventsCommand();
            if (bodyCase_ == BodyOneofCase.Events) {
              subBuilder.MergeFrom(Events);
            }
            input.ReadMessage(subBuilder);
            Events = subBuilder;
            break;
          }
          case 402: {
            global::LeanCloud.Play.Protocol.StatisticCommand subBuilder = new global::LeanCloud.Play.Protocol.StatisticCommand();
            if (bodyCase_ == BodyOneofCase.Statistic) {
              subBuilder.MergeFrom(Statistic);
            }
            input.ReadMessage(subBuilder);
            Statistic = subBuilder;
            break;
          }
          case 410: {
            global::LeanCloud.Play.Protocol.RoomListCommand subBuilder = new global::LeanCloud.Play.Protocol.RoomListCommand();
            if (bodyCase_ == BodyOneofCase.RoomList) {
              subBuilder.MergeFrom(RoomList);
            }
            input.ReadMessage(subBuilder);
            RoomList = subBuilder;
            break;
          }
          case 1018: {
            global::LeanCloud.Play.Protocol.ErrorCommand subBuilder = new global::LeanCloud.Play.Protocol.ErrorCommand();
            if (bodyCase_ == BodyOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LeanCloud.Play.Protocol.MessagesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      cmd_ = other.cmd_;
      op_ = other.op_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private global::LeanCloud.Play.Protocol.CommandType cmd_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.CommandType Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private global::LeanCloud.Play.Protocol.OpType op_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LeanCloud.Play.Protocol.OpType Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (Op != other.Op) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd != 0) hash ^= Cmd.GetHashCode();
      if (Op != 0) hash ^= Op.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Cmd);
      }
      if (Op != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Op);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cmd);
      }
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Cmd != 0) {
        Cmd = other.Cmd;
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cmd = (global::LeanCloud.Play.Protocol.CommandType) input.ReadEnum();
            break;
          }
          case 16: {
            Op = (global::LeanCloud.Play.Protocol.OpType) input.ReadEnum();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
